import {DiskDrive} from "./disk-drive";
import {Log} from "../../classes/log";
import {Util} from "../../classes/util";
import {FDC} from "../interfaces/fdc";
import {DSRCard} from "../interfaces/dsr-card";
import {MemoryMappedCard} from "../interfaces/memory-mapped-card";
import {CPU} from "../interfaces/cpu";

export class MyarcFDC implements FDC, DSRCard, MemoryMappedCard {

    static ID = "MYARC_FDC";

    private ram: Uint8Array;
    private romBank: number;
    private romEnabled = false;
    private command = 0;
    private drive = 0;
    private side = 0;
    private track = 0;
    private sector = 0;
    private direction = 1;
    private data = 0;
    private doubleDensity = true;
    private busy = false;
    private headLoaded = false;
    private readBuffer: number[] = [];
    private writeBuffer: number[] = [];
    private log = Log.getLog();

    constructor(
        private diskDrives: DiskDrive[]) {
    }

    public reset() {
        this.ram = new Uint8Array(0x0800);
        this.romBank = 0;
        this.command = 0;
        this.drive = 0;
        this.side = 0;
        this.track = 0;
        this.sector = 0;
        this.direction = 1;
        this.data = 0;
        this.busy = false;
        this.headLoaded = false;
        this.readBuffer = [];
        this.writeBuffer = [];
    }

    public getId(): string {
        return MyarcFDC.ID;
    }

    public getDSR(): number[] {
        return MYARC_FDC_DSR_ROM;
    }

    public isEnabled() {
        return this.romEnabled;
    }

    public getDSRBankOffset(): number {
        return this.romBank << 12;
    }

    public getCruAddress(): number {
        return 0x1100;
    }

    public writeCruBit(bit: number, value: boolean) {
        bit = bit & 0x07;
        switch (bit) {
            case 0:
                this.log.info("Myarc FDC ROM enabled: " + value);
                this.romEnabled = value;
                this.romBank = 0;
                break;
            case 1:
                break;
            case 2:
                this.setSide(value ? 1 : 0);
                break;
            case 3:
                this.romBank = value ? 1 : 0;
                this.doubleDensity = !value;
                break;
            case 4:
                this.setDrive(1, value);
                break;
            case 5:
                this.setDrive(2 , value);
                break;
            case 6:
                this.setDrive(3 , value);
                break;
            case 7:
                this.setDrive(4 , value);
                break;
        }
    }

    public readCruBit(bit: number): boolean {
        bit = bit & 0x07;
        switch (bit) {
            case 0:
                // false means busy
                this.log.info("Read busy: " + this.busy);
                return !this.busy;
            case 1:
                // false means data ready
                this.log.info("Read data ready");
                return false;
            case 2:
                return true;
            case 3:
                return false;
            case 4:
                // Drive 4 80 track dip switch
                return false;
            case 5:
                // Drive 3 80 track dip switch
                return false;
            case 6:
                // Drive 2 80 track dip switch
                return false;
            case 7:
                // Drive 1 80 track dip switch
                return false;
            default:
                return false;
        }
    }

    readMemoryMapped(addr: number, cpu: CPU): number {
        if (addr < 0x5000) {
            const romAddr = (addr - 0x4000) + (this.romBank << 12);
            return (MYARC_FDC_DSR_ROM[romAddr] << 8) | MYARC_FDC_DSR_ROM[romAddr + 1];
        } else if (addr < 0x5800) {
            const ramAddr = addr - 0x5000;
            return (this.ram[ramAddr] << 8) + this.ram[ramAddr + 1];
        } else if (addr >= 0x5ff0) {
            addr = addr & 0x5f07;
            let byte = 0;
            switch (addr) {
                case 0x5ff0:
                    byte = this.getStatus();
                    break;
                case 0x5ff2:
                    byte = this.getTrack();
                    break;
                case 0x5ff4:
                    byte = this.getSector(); // TODO: no read?
                    break;
                case 0x5ff6:
                    byte = this.getData();
                    break;
            }
            return byte;
        } else {
            return 0;
        }
    }

    writeMemoryMapped(addr: number, word: number, cpu: CPU): void {
        if (addr < 0x5000) {
            // ROM
        } else if (addr < 0x5800) {
            const ramAddr = addr - 0x5000;
            this.ram[ramAddr] = word >> 8;
            this.ram[ramAddr + 1] = word & 0xff;
        } else if (addr >= 0x5ff0) {
            this.log.info("Write " + Util.toHexWord(word) + " to " + Util.toHexWord(addr));
            addr = addr & 0x5f07;
            const byte = word & 0xff;
            switch (addr) {
                case 0x5f00:
                    this.setCommand(byte);
                    break;
                case 0x5f02:
                    this.setTrack(byte);
                    break;
                case 0x5f04:
                    this.setSector(byte);
                    break;
                case 0x5f06:
                    this.setData(byte);
                    break;
            }
        }
    }

    getByte(addr: number): number {
        if (addr < 0x5000) {
            const romAddr = (addr - 0x4000) + (this.romBank << 12);
            return MYARC_FDC_DSR_ROM[romAddr];
        } else if (addr < 0x5800) {
            const ramAddr = addr - 0x5000;
            return this.ram[ramAddr];
        } else {
            return 0;
        }
    }

    public getDrive() {
        this.log.info("Get drive: " + this.drive);
        return this.drive;
    }

    public setDrive(drive: number, enabled: boolean) {
        if (enabled) {
            this.log.info("Select drive: " + drive);
            this.drive = drive;
        } else if (this.drive === drive) {
            this.drive = 0;
        }
    }

    public getSide() {
        this.log.info("Get side: " + Util.toHexByte(this.side));
        return this.side;
    }

    public setSide(side: number) {
        this.log.info("Set side " + Util.toHexByte(side));
        this.side = side;
    }

    public getTrack() {
        this.log.info("Get track: " + Util.toHexByte(this.track));
        return this.track;
    }

    public setTrack(track: number) {
        this.log.info("Set track: " + Util.toHexByte(track));
        this.track = track;
    }

    public getSector() {
        this.log.info("Get sector: " + Util.toHexByte(this.sector));
        return this.sector;
    }

    public setSector(sector: number) {
        this.log.info("Set sector: " + Util.toHexByte(sector));
        this.sector = sector;
    }

    public getData() {
        // this.log.info("Get data: " + Util.toHexByte(this.data));
        const byte = this.data;
        if (this.readBuffer.length > 0) {
            this.readByteFromBuffer();
        }
        this.busy = true;
        return byte;
    }

    public setData(data: number) {
        this.log.info("Set data " + Util.toHexByte(data));
        this.data = data;
        this.writeByteToBuffer(data);
    }

    /*
        Command	        >80	>40	>20	>10	>08	>04	>02  >01
        Restore	        0	0	0	0	h	V	r1	 r0
        Seek	        0	0	0	1	h	V	r1	 r0
        Step	        0	0	1	T	h	V	r1	 r0
        Step-in	        0	1	0	T	h	V	r1	 r0
        Step-out	    0	1	1	T	h	V	r1	 r0
        Read sector	    1	0	0	m	S	E	C/0  0
        Write sector	1	0	1	m	S	E	C/a1 a0
        Read ID	        1	1	0	0	0	E'	0	 0
        Read track	    1	1	1	0	0	E'	0	 s*
        Write track	    1	1	1	1	0	E'	0	 0
        Force interrupt	1	1	0	1	I3	I2	I1 	 I0
     */

    public setCommand(command: number) {
        this.log.info("Command: " + Util.toHexByte(command));
        this.command = command;
        const flag = (command & 0x10) !== 0;
        const flags = command & 0x0f;
        switch (command & 0xf0) {
            case 0x00:
                this.restore(flags);
                break;
            case 0x10:
                this.seek(flags);
                break;
            case 0x20:
            case 0x30:
                this.step(flag, flags);
                break;
            case 0x40:
            case 0x50:
                this.stepIn(flag, flags);
                break;
            case 0x60:
            case 0x70:
                this.stepOut(flag, flags);
                break;
            case 0x80:
            case 0x90:
                this.readSector(flag, flags);
                break;
            case 0xa0:
            case 0xb0:
                this.writeSector(flag, flags);
                break;
            case 0xc0:
                this.readId(flags);
                break;
            case 0xd0:
                this.forceInterrupt(flags);
                break;
            case 0xe0:
                this.readTrack(flags);
                break;
            case 0xf0:
                this.writeTrack(flags);
                break;
        }
    }

    private restore(flags: number) {
        this.log.info("Cmd: Restore");
        this.track = 0;
        if (flags & 0x08) {
            this.loadHead();
        }
        this.busy = true;
    }

    private seek(flags: number) {
        this.log.info("Cmd: Seek track " + Util.toHexByte(this.data));
        this.track = this.data;
        if (flags & 0x08) {
            this.loadHead();
        }
        this.busy = true;
    }

    private step(updateTrackRegister: boolean, flags: number) {
        this.log.info("Cmd: Step: " + updateTrackRegister);
        if (updateTrackRegister) {
            if (this.direction > 0) {
                this.track = Math.min(this.track + 1, 255);
            } else {
                this.track = Math.max(this.track - 1, 0);
            }
        }
        if (flags & 0x08) {
            this.loadHead();
        }
        this.busy = true;
    }

    private stepIn(updateTrackRegister: boolean, flags: number) {
        this.log.info("Cmd: Step in: " + updateTrackRegister);
        this.direction = 1;
        this.step(updateTrackRegister, flags);
    }

    private stepOut(updateTrackRegister: boolean, flags: number) {
        this.log.info("Cmd: Step out: " + updateTrackRegister);
        this.direction = -1;
        this.step(updateTrackRegister, flags);
    }

    private readSector(multiple: boolean, flags: number) {
        this.log.info("Cmd: Read sector " + Util.toHexWord(this.getSectorIndex()) +
            " (sector " + Util.toHexByte(this.sector) +
            ", track " + Util.toHexByte(this.track) +
            ", side " + Util.toHexByte(this.side) + ")" +
            (multiple ? " multiple" : "")
        );
        this.readSectorIntoBuffer();
        this.readByteFromBuffer();
        this.loadHead();
    }

    private writeSector(multiple: boolean, flags: number) {
        this.log.info("Cmd: Write sector " + Util.toHexWord(this.getSectorIndex()) + (multiple ? " multiple" : ""));
        this.writeBuffer = [];
    }

    private readId(flags: number) {
        this.log.info("Cmd: Read ID");
        this.readBuffer.push(this.track);
        this.readBuffer.push(this.side);
        this.readBuffer.push(this.sector);
        this.readBuffer.push(0x01);
        this.readBuffer.push(0x00);
        this.readBuffer.push(0x00);
        this.readByteFromBuffer();
        this.loadHead();
        this.busy = true;
    }

    private forceInterrupt(flags: number) {
        this.log.info("Cmd: Force interrupt");
        this.busy = false;
    }

    private readTrack(flags: number) {
        this.log.info("Cmd: Read track (not implemented)");
    }

    private writeTrack(flags: number) {
        this.log.info("Cmd: Write track (not implemented)");
    }

    public getStatus() {
        const track0 = this.track === 0 && ((this.command & 0x80) === 0 || (this.command & 0xf0) === 0xd0);
        this.log.info("Read status: " +
            (this.headLoaded ? "head loaded, " : "") +
            (track0 ? "track 0, " : "") +
            (this.busy ? "busy" : "not busy")
        );
        let status = 0;
        if (this.headLoaded) {
            status |= 0x20;
        }
        if (track0) {
            status |= 0x04;
        }
        if (this.busy) {
            status |= 0x01;
        }
        this.busy = false;
        return status;
    }

    private getSectorIndex() {
        if (this.side === 0) {
            return this.track * 9 + this.sector;
        } else {
            return 360 + (39 - this.track) * 9 + this.sector;
        }
    }

    private loadHead() {
        this.headLoaded = true;
    }

    private readSectorIntoBuffer() {
        const sector = this.getSectorIndex();
        const sectorBytes = this.diskDrives[this.drive - 1].getDiskImage()?.readSector(sector) || [];
        for (const byte of sectorBytes) {
            this.readBuffer.push(byte);
        }
    }

    private readByteFromBuffer() {
        this.data = this.readBuffer.shift() || 0x00;
        if (this.readBuffer.length === 0 && (this.command & 0xf0) === 0x90) {
            // Read sector multiple
            this.sector++;
            this.readSectorIntoBuffer();
        }
    }

    private writeBufferToSector() {
        const sector = this.getSectorIndex();
        this.diskDrives[this.drive - 1].getDiskImage()?.writeSector(sector, new Uint8Array(this.writeBuffer));
    }

    private writeByteToBuffer(data: number) {
        this.writeBuffer.push(data);
        if (this.writeBuffer.length === 256) {
            this.writeBufferToSector();
            this.writeBuffer = [];
            if (this.command === 0xb0) {
                this.sector++;
            }
        }
    }

    getState(): any {
        return {
            command: this.command,
            drive: this.drive,
            side: this.side,
            track: this.track,
            sector: this.sector,
            direction: this.direction,
            data: this.data,
            busy: this.busy,
            headLoaded: this.headLoaded,
            readBuffer: this.readBuffer,
            writeBuffer: this.writeBuffer
        };
    }

    restoreState(state: any): void {
        this.command = state.command;
        this.drive = state.drive;
        this.side = state.side;
        this.track = state.track;
        this.sector = state.sector;
        this.direction = state.direction;
        this.data = state.data;
        this.busy = state.busy;
        this.headLoaded = state.headLoaded;
        this.readBuffer = state.readBuffer;
        this.writeBuffer = state.writeBuffer;
    }
}

export const MYARC_FDC_DSR_ROM = [
    0xAA, 0x03, 0x00, 0x00, 0x40, 0x64, 0x00, 0x00, 0x40, 0x6A, 0x40, 0x10, 0x00, 0x00, 0x00, 0x00,
    0x40, 0x16, 0x42, 0x2E, 0x01, 0x10, 0x40, 0x1C, 0x41, 0x10, 0x01, 0x11, 0x40, 0x22, 0x42, 0x56,
    0x01, 0x12, 0x40, 0x28, 0x42, 0x56, 0x01, 0x13, 0x40, 0x2E, 0x42, 0x56, 0x01, 0x14, 0x40, 0x34,
    0x42, 0x56, 0x01, 0x15, 0x40, 0x3A, 0x41, 0x04, 0x01, 0x16, 0x40, 0x44, 0x40, 0xFE, 0x05, 0x46,
    0x49, 0x4C, 0x45, 0x53, 0x40, 0x4C, 0x40, 0xCA, 0x03, 0x44, 0x49, 0x52, 0x40, 0x54, 0x41, 0x0A,
    0x02, 0x4C, 0x52, 0x50, 0x40, 0x5C, 0x40, 0xF8, 0x03, 0x49, 0x4C, 0x52, 0x00, 0x00, 0x41, 0x2E,
    0x03, 0x4C, 0x4C, 0x52, 0x00, 0x00, 0x40, 0xA2, 0x00, 0x28, 0x40, 0x74, 0x41, 0x4C, 0x04, 0x44,
    0x53, 0x4B, 0x31, 0x09, 0x40, 0x7E, 0x41, 0x4C, 0x04, 0x44, 0x53, 0x4B, 0x32, 0x2E, 0x40, 0x88,
    0x41, 0x4C, 0x04, 0x44, 0x53, 0x4B, 0x33, 0x20, 0x40, 0x92, 0x41, 0x4C, 0x04, 0x44, 0x53, 0x4B,
    0x34, 0x07, 0x00, 0x00, 0x41, 0x4C, 0x03, 0x44, 0x53, 0x4B, 0x04, 0x00, 0x17, 0xAA, 0x3F, 0xFF,
    0x11, 0x03, 0x02, 0x04, 0x50, 0x00, 0x04, 0xF4, 0x02, 0x84, 0x58, 0x00, 0x11, 0xFC, 0x02, 0x01,
    0x37, 0xD7, 0xC8, 0x01, 0x83, 0x70, 0x05, 0x81, 0x02, 0x07, 0x40, 0x9D, 0xC2, 0x4B, 0x06, 0xA0,
    0x4F, 0x0C, 0xD8, 0x20, 0x40, 0x48, 0x50, 0xCF, 0x04, 0x59, 0x04, 0xC5, 0xC8, 0x0B, 0x83, 0x6C,
    0xD8, 0x20, 0x40, 0x9C, 0x50, 0x8C, 0x02, 0x0A, 0x4E, 0xB6, 0x06, 0xA0, 0x41, 0x34, 0xC8, 0x0C,
    0x50, 0x18, 0x06, 0xA0, 0x41, 0x1E, 0xC0, 0xC3, 0x13, 0x57, 0x06, 0xA0, 0x43, 0xB2, 0x4E, 0xB6,
    0x06, 0xA0, 0x46, 0x02, 0x04, 0x60, 0x4B, 0x8E, 0x02, 0x05, 0x00, 0x02, 0x10, 0x1A, 0x02, 0x05,
    0x00, 0x04, 0x10, 0x17, 0x02, 0x05, 0x00, 0x06, 0x10, 0x14, 0x02, 0x05, 0x00, 0x08, 0x10, 0x11,
    0xC0, 0xCB, 0x06, 0xA0, 0x41, 0xC6, 0xC2, 0xC3, 0x02, 0x05, 0x00, 0x0C, 0x10, 0x0A, 0xD8, 0x20,
    0x40, 0x3E, 0x50, 0x95, 0x04, 0xE0, 0x50, 0x99, 0x02, 0x05, 0x00, 0x10, 0x10, 0x04, 0x02, 0x05,
    0x00, 0x0E, 0x05, 0xCB, 0x02, 0xA4, 0xC8, 0x0B, 0x50, 0xCA, 0x02, 0x06, 0x1D, 0x03, 0x02, 0x07,
    0xC1, 0x65, 0x02, 0x08, 0x40, 0x00, 0x02, 0x09, 0x04, 0x55, 0x04, 0x46, 0x02, 0xA4, 0xC8, 0x0B,
    0x83, 0x6C, 0xC0, 0x64, 0xFF, 0x76, 0x60, 0x64, 0xFF, 0x74, 0x02, 0x21, 0xFF, 0xF6, 0x06, 0xA0,
    0x44, 0x06, 0x02, 0x0A, 0x00, 0x23, 0x02, 0x06, 0x50, 0x8C, 0xDD, 0xAF, 0xFB, 0xFE, 0x06, 0x0A,
    0x16, 0xFC, 0xD1, 0xA0, 0x50, 0x99, 0x09, 0x86, 0x02, 0x26, 0xFF, 0xD0, 0x15, 0x02, 0x02, 0x06,
    0xFF, 0x00, 0xC8, 0x06, 0x50, 0xB0, 0x58, 0x20, 0x4E, 0xE2, 0x50, 0x8D, 0xC0, 0x20, 0x50, 0x8C,
    0xD2, 0x80, 0x98, 0x0A, 0x40, 0x73, 0x12, 0x02, 0x04, 0x60, 0x4E, 0xBE, 0xC8, 0x0C, 0x50, 0x18,
    0x06, 0xA0, 0x41, 0x28, 0xC8, 0x01, 0x83, 0x6A, 0x09, 0x7A, 0xC1, 0x6A, 0x41, 0xB2, 0x04, 0xCA,
    0x04, 0x55, 0x44, 0xF0, 0x4F, 0x28, 0x4B, 0x60, 0x4B, 0x60, 0x4F, 0x28, 0x45, 0x00, 0x45, 0x00,
    0x48, 0x3A, 0x4E, 0xBE, 0x4F, 0x92, 0xD1, 0x60, 0x83, 0x4C, 0x02, 0x45, 0x0F, 0x00, 0x13, 0x1F,
    0x98, 0x05, 0x41, 0x01, 0x1B, 0x1B, 0x09, 0x85, 0xC8, 0x05, 0x50, 0xB0, 0xC8, 0x03, 0x83, 0x6C,
    0xC0, 0x60, 0x83, 0x56, 0x06, 0x01, 0xC2, 0x8B, 0x06, 0xA0, 0x44, 0x06, 0xD8, 0x2F, 0xFB, 0xFE,
    0x50, 0x8C, 0xC0, 0x60, 0x83, 0x50, 0xC8, 0x01, 0x50, 0x8E, 0x09, 0x81, 0x02, 0x21, 0x83, 0x02,
    0xC8, 0x01, 0x50, 0x92, 0xC8, 0x0C, 0x50, 0x18, 0x02, 0xA4, 0x04, 0x5A, 0x04, 0x53, 0xD8, 0x20,
    0x40, 0x91, 0x83, 0x50, 0x04, 0x60, 0x4E, 0xB6, 0xC2, 0x8B, 0x06, 0xA0, 0x44, 0x06, 0x02, 0x0B,
    0x83, 0x52, 0xDE, 0xEF, 0xFB, 0xFE, 0x02, 0x8B, 0x83, 0x5C, 0x16, 0xFB, 0x04, 0x5A, 0xC0, 0xCB,
    0x06, 0xA0, 0x41, 0xC6, 0xD8, 0x20, 0x4B, 0xC0, 0x50, 0x8C, 0xC8, 0x20, 0x83, 0x50, 0x83, 0x4A,
    0x04, 0x20, 0x42, 0x86, 0x4E, 0x64, 0xC2, 0xE0, 0x83, 0x4A, 0x16, 0x03, 0x06, 0xA0, 0x43, 0xB2,
    0x4E, 0x64, 0x04, 0x60, 0x4E, 0x64, 0xC0, 0xCB, 0x06, 0xA0, 0x41, 0xC6, 0x06, 0xA0, 0x43, 0xB2,
    0x4E, 0xDA, 0x06, 0xA0, 0x41, 0x1E, 0xC0, 0x60, 0x83, 0x4E, 0x04, 0xE0, 0x50, 0x90, 0x06, 0xA0,
    0x42, 0x18, 0x04, 0x60, 0x46, 0x14, 0x50, 0x00, 0x42, 0x8A, 0x50, 0x00, 0x42, 0xA0, 0x50, 0x00,
    0x42, 0x8E, 0x50, 0x00, 0x42, 0xA4, 0x50, 0x00, 0x42, 0xB0, 0x07, 0x00, 0x10, 0x03, 0x04, 0xC0,
    0x02, 0x43, 0x7F, 0xFF, 0xD8, 0x20, 0x40, 0x64, 0x50, 0xCE, 0xC0, 0x60, 0x50, 0xB4, 0x10, 0x13,
    0x07, 0x00, 0x10, 0x01, 0x04, 0xC0, 0xD8, 0x0C, 0x50, 0xCE, 0x02, 0x21, 0x00, 0x08, 0x10, 0x0B,
    0x04, 0xC0, 0xD8, 0x00, 0x50, 0xCE, 0xD0, 0x20, 0x83, 0x4D, 0xC0, 0x60, 0x83, 0x4E, 0x02, 0x41,
    0x3F, 0xFF, 0xC0, 0xE0, 0x83, 0x50, 0x02, 0x05, 0x00, 0x0A, 0x06, 0xA0, 0x41, 0x36, 0xD2, 0x49,
    0x13, 0x02, 0xC3, 0x9E, 0x03, 0x80, 0x05, 0xCE, 0x03, 0x80, 0xC2, 0x8B, 0x02, 0x09, 0x00, 0xFE,
    0xA2, 0x48, 0x02, 0x07, 0x00, 0x07, 0xC0, 0x48, 0xA0, 0x49, 0x06, 0x41, 0x09, 0x21, 0x0A, 0x11,
    0x05, 0x81, 0x06, 0xA0, 0x44, 0x06, 0xD8, 0x2F, 0xFB, 0xFE, 0x50, 0x06, 0x10, 0x00, 0xD8, 0x2F,
    0xFB, 0xFE, 0x50, 0x07, 0xC1, 0x60, 0x50, 0x06, 0x13, 0x11, 0xC1, 0x83, 0x02, 0x26, 0x00, 0x08,
    0xC8, 0x03, 0x50, 0x02, 0x04, 0x20, 0x42, 0x7A, 0x4E, 0xDA, 0x02, 0x05, 0x83, 0x52, 0x8D, 0xB5,
    0x1B, 0x09, 0x1A, 0x04, 0x02, 0x85, 0x83, 0x5C, 0x16, 0xFA, 0x04, 0x5A, 0xC2, 0x41, 0x06, 0x07,
    0x16, 0xDA, 0x10, 0x04, 0xC2, 0x01, 0x06, 0x07, 0x16, 0xD6, 0x05, 0xC1, 0xC0, 0x41, 0x04, 0x5A,
    0x06, 0x40, 0xC2, 0x8B, 0x06, 0xA0, 0x43, 0xB2, 0x4E, 0xDA, 0x02, 0x0B, 0x50, 0xDA, 0xC1, 0x40,
    0xC1, 0x80, 0x86, 0xE0, 0x43, 0x40, 0x14, 0x01, 0x09, 0x10, 0xC1, 0xC0, 0x09, 0x37, 0x02, 0x08,
    0x01, 0x00, 0x02, 0x40, 0x00, 0x07, 0x13, 0x01, 0x0A, 0x08, 0xD2, 0x67, 0x51, 0x08, 0x26, 0x48,
    0x13, 0x13, 0x0A, 0x18, 0x16, 0x03, 0x02, 0x08, 0x01, 0x00, 0x05, 0x87, 0x05, 0x86, 0x86, 0xE0,
    0x43, 0x40, 0x14, 0x01, 0x05, 0x86, 0x86, 0xC6, 0x1A, 0xF0, 0x04, 0xC0, 0xC1, 0x45, 0x16, 0xDF,
    0xC2, 0xDA, 0x02, 0x0A, 0x80, 0x00, 0x04, 0x5B, 0xB9, 0xC8, 0x51, 0x08, 0xD8, 0x08, 0x50, 0xB2,
    0xC0, 0x06, 0x02, 0x06, 0x00, 0x01, 0x86, 0xE0, 0x43, 0x40, 0x14, 0x01, 0x0A, 0x16, 0x05, 0xCA,
    0x04, 0x5A, 0x02, 0x05, 0x50, 0xC8, 0xC8, 0x05, 0x50, 0x02, 0x04, 0xE0, 0x50, 0x06, 0xD1, 0x60,
    0x50, 0xB3, 0x13, 0x13, 0x91, 0x60, 0x50, 0xB1, 0x13, 0x16, 0xD1, 0x60, 0x50, 0xB2, 0x13, 0x0D,
    0xD1, 0x60, 0x50, 0xB1, 0xD8, 0x20, 0x50, 0xB3, 0x50, 0xB1, 0x04, 0x20, 0x42, 0x82, 0x43, 0xE0,
    0xD8, 0x05, 0x50, 0xB1, 0x68, 0x20, 0x00, 0x08, 0x50, 0x02, 0xC8, 0x20, 0x50, 0xB0, 0x50, 0xB2,
    0x04, 0x20, 0x42, 0x7A, 0x43, 0xFC, 0x05, 0xCB, 0x04, 0x5B, 0x00, 0x08, 0x04, 0xE0, 0x50, 0xB2,
    0xC2, 0xDB, 0x04, 0x5B, 0xA0, 0x7B, 0x06, 0xC1, 0xD8, 0x01, 0x8C, 0x02, 0x06, 0xC1, 0xD8, 0x01,
    0x8C, 0x02, 0x04, 0x5B, 0xC8, 0x0B, 0x83, 0x66, 0xC8, 0x05, 0x83, 0x62, 0x13, 0x52, 0x04, 0xE0,
    0x83, 0x5E, 0x02, 0x00, 0x00, 0x22, 0xC8, 0x20, 0x48, 0x5E, 0x83, 0x5C, 0x07, 0x08, 0x06, 0x05,
    0xC2, 0x43, 0x02, 0x29, 0x00, 0x24, 0x06, 0xA0, 0x44, 0xDC, 0x13, 0x0F, 0x81, 0x42, 0x14, 0x3E,
    0x06, 0x20, 0x83, 0x5C, 0x13, 0x45, 0xC1, 0xC8, 0xC2, 0x02, 0xC0, 0x01, 0x06, 0xA0, 0x44, 0xDC,
    0x16, 0xF5, 0xA0, 0x08, 0x60, 0x07, 0xC8, 0x00, 0x83, 0x5E, 0xC8, 0x09, 0x83, 0x64, 0x06, 0xA0,
    0x43, 0x42, 0x44, 0xD0, 0xC2, 0x60, 0x83, 0x64, 0x02, 0x08, 0x00, 0x03, 0x62, 0x48, 0xC0, 0x40,
    0x88, 0x00, 0x83, 0x5E, 0x16, 0x06, 0x62, 0x48, 0x05, 0xA0, 0x83, 0x5C, 0x06, 0xA0, 0x44, 0xDC,
    0x62, 0x48, 0xA8, 0xC6, 0x00, 0x16, 0xC0, 0xA3, 0x00, 0x16, 0x02, 0x86, 0x00, 0x01, 0x13, 0x03,
    0x05, 0x82, 0x02, 0x42, 0xFF, 0xFE, 0x06, 0x02, 0xDE, 0x64, 0x00, 0x03, 0x0A, 0x42, 0xB0, 0x64,
    0x00, 0x05, 0xDE, 0x41, 0xDE, 0x42, 0xA2, 0x48, 0xC0, 0x40, 0xA0, 0x06, 0x88, 0x23, 0x00, 0x16,
    0x83, 0x62, 0x14, 0x07, 0x06, 0x20, 0x83, 0x5C, 0x16, 0xCE, 0x10, 0x0A, 0xA0, 0x45, 0x60, 0x48,
    0x06, 0x01, 0xC8, 0xE0, 0x83, 0x62, 0x00, 0x16, 0xC2, 0xE0, 0x83, 0x66, 0x05, 0xCB, 0x04, 0x5B,
    0xC2, 0xE0, 0x83, 0x66, 0x02, 0x0A, 0x80, 0x00, 0xC2, 0xDB, 0x04, 0x5B, 0xD9, 0x39, 0x00, 0x03,
    0xD0, 0x59, 0xD9, 0x39, 0x00, 0x05, 0xD0, 0xB9, 0x09, 0x42, 0x02, 0x41, 0x0F, 0xFF, 0x04, 0x5B,
    0x98, 0x20, 0x47, 0x39, 0x50, 0x90, 0x16, 0x04, 0xC1, 0xA0, 0x50, 0x8C, 0x0A, 0xC6, 0x18, 0x10,
    0x02, 0x82, 0x58, 0x00, 0x13, 0x02, 0x04, 0x60, 0x4E, 0xE0, 0xC0, 0xC3, 0x16, 0x02, 0x04, 0x60,
    0x4E, 0xE6, 0xC1, 0xA0, 0x50, 0x8C, 0x21, 0xA0, 0x41, 0x06, 0x16, 0x04, 0x0A, 0xC6, 0x18, 0x02,
    0x04, 0x60, 0x4E, 0xCE, 0xC1, 0x83, 0x04, 0xF6, 0x04, 0xF6, 0x04, 0xF6, 0x04, 0xF6, 0xD0, 0x20,
    0x50, 0x95, 0x09, 0x80, 0x02, 0x06, 0x50, 0x97, 0xA1, 0xA4, 0xFF, 0x74, 0x60, 0x24, 0xFF, 0x74,
    0x12, 0xEF, 0xD0, 0xA0, 0x50, 0xB0, 0x16, 0x03, 0x06, 0xA0, 0x43, 0xB2, 0x4E, 0xDA, 0x02, 0x07,
    0x83, 0x52, 0xC0, 0x87, 0xDC, 0xA0, 0x40, 0x87, 0x02, 0x82, 0x83, 0x5C, 0x16, 0xFB, 0xC0, 0x87,
    0x06, 0x00, 0x13, 0x32, 0x98, 0x16, 0x40, 0x87, 0x13, 0xDB, 0x98, 0x16, 0x40, 0x7D, 0x13, 0x08,
    0x98, 0x16, 0x44, 0xD6, 0x1B, 0x05, 0x02, 0x82, 0x83, 0x5C, 0x13, 0xD2, 0xDC, 0xB6, 0x10, 0xF0,
    0x81, 0xC2, 0x13, 0xCE, 0xD1, 0x60, 0x50, 0xB0, 0x13, 0xCB, 0x04, 0xC7, 0x05, 0x87, 0xC8, 0x07,
    0x50, 0xB0, 0x02, 0x87, 0x00, 0x05, 0x13, 0xB7, 0x06, 0xA0, 0x43, 0xB2, 0x45, 0x8C, 0x02, 0x02,
    0x83, 0x52, 0x02, 0x05, 0x50, 0xD0, 0x8C, 0xB5, 0x16, 0xF1, 0x02, 0x82, 0x83, 0x5C, 0x16, 0xFB,
    0x0A, 0x87, 0x02, 0x27, 0x80, 0x00, 0xDD, 0x87, 0x06, 0xA0, 0x4E, 0xFE, 0xD0, 0xA0, 0x50, 0x95,
    0x09, 0x82, 0x06, 0xA0, 0x4F, 0x1A, 0x10, 0xC3, 0xD1, 0x60, 0x50, 0xB0, 0x16, 0xA9, 0x02, 0x82,
    0x83, 0x52, 0x16, 0x20, 0xC1, 0x60, 0x50, 0x8C, 0x02, 0x45, 0xFF, 0xFE, 0x02, 0x85, 0x00, 0x0C,
    0x16, 0x9F, 0x02, 0x06, 0x26, 0x00, 0xD1, 0x60, 0x50, 0x90, 0x16, 0x02, 0xD8, 0x06, 0x50, 0x90,
    0x91, 0xA0, 0x50, 0x90, 0x16, 0x95, 0x06, 0xA0, 0x46, 0x02, 0xCC, 0xE0, 0x50, 0xB0, 0x04, 0xF3,
    0x10, 0x42, 0xC8, 0x20, 0x4E, 0x80, 0x50, 0x06, 0x04, 0x20, 0x42, 0x76, 0x4E, 0xDA, 0x04, 0xE0,
    0x50, 0x92, 0x04, 0x5B, 0xC8, 0x20, 0x4E, 0x80, 0x50, 0x06, 0x04, 0x20, 0x42, 0x76, 0x4E, 0xDA,
    0xC2, 0x20, 0x50, 0xB4, 0x06, 0xA0, 0x42, 0xDA, 0x16, 0x02, 0x04, 0x60, 0x49, 0xAE, 0xC8, 0x01,
    0x83, 0x68, 0xC1, 0x60, 0x50, 0x8C, 0x21, 0x60, 0x4B, 0xC0, 0x16, 0x17, 0x98, 0x05, 0x40, 0x27,
    0x16, 0x0C, 0xC1, 0x60, 0x50, 0x90, 0x16, 0x21, 0x07, 0x20, 0x50, 0x90, 0xC8, 0x01, 0x50, 0x92,
    0xC0, 0x60, 0x50, 0x8E, 0x06, 0xA0, 0x42, 0x18, 0x10, 0xE3, 0x98, 0x05, 0x40, 0x33, 0x16, 0x15,
    0xD1, 0xE0, 0x83, 0x4D, 0x13, 0x1A, 0x04, 0x60, 0x42, 0x0E, 0x98, 0x05, 0x41, 0x07, 0x13, 0x15,
    0xD1, 0x45, 0x13, 0x0D, 0x98, 0x05, 0x44, 0xA1, 0x13, 0x08, 0x98, 0x05, 0x40, 0x73, 0x16, 0x03,
    0xD8, 0x20, 0x44, 0xD6, 0x50, 0x94, 0x04, 0x60, 0x4E, 0x64, 0x04, 0x60, 0x4E, 0xE0, 0x21, 0x60,
    0x41, 0x00, 0x16, 0x03, 0x21, 0x60, 0x40, 0xFA, 0x16, 0xF8, 0x02, 0x0A, 0x80, 0x00, 0xC0, 0x60,
    0x50, 0xB4, 0x02, 0x21, 0x00, 0xFC, 0x06, 0xA0, 0x44, 0x06, 0xD1, 0xAF, 0xFB, 0xFE, 0x16, 0x3D,
    0xD1, 0xAF, 0xFB, 0xFE, 0x16, 0x3A, 0x04, 0xC0, 0x06, 0xA0, 0x43, 0x42, 0x4E, 0xE6, 0x02, 0x05,
    0x00, 0x7F, 0xC0, 0x60, 0x50, 0xB4, 0x06, 0xA0, 0x44, 0x06, 0xC1, 0x83, 0x02, 0x26, 0x00, 0x08,
    0x88, 0x01, 0x83, 0x68, 0x16, 0x01, 0xCD, 0x80, 0xDD, 0xAF, 0xFB, 0xFE, 0x05, 0xC1, 0xDD, 0xAF,
    0xFB, 0xFE, 0x06, 0x05, 0x16, 0xF5, 0xC8, 0x03, 0x50, 0x02, 0xC8, 0x20, 0x4E, 0x80, 0x50, 0x06,
    0x04, 0x20, 0x42, 0x82, 0x4E, 0xDA, 0xC1, 0x43, 0xCD, 0x60, 0x50, 0xB0, 0xCD, 0x40, 0x04, 0xF5,
    0x04, 0xF5, 0x02, 0x06, 0x83, 0x52, 0xCD, 0x76, 0x02, 0x86, 0x83, 0x5C, 0x16, 0xFC, 0x04, 0xF5,
    0x02, 0x02, 0x00, 0x7A, 0xC1, 0x85, 0x04, 0xF5, 0x06, 0x02, 0x16, 0xFD, 0xC0, 0xA0, 0x50, 0x8C,
    0x98, 0x02, 0x41, 0x07, 0x13, 0x04, 0x04, 0x60, 0x49, 0x32, 0x04, 0x60, 0x4E, 0xD2, 0xCD, 0xA0,
    0x43, 0x60, 0xC1, 0x60, 0x50, 0x92, 0x02, 0x25, 0x00, 0xFF, 0x05, 0xC6, 0x09, 0x85, 0x13, 0x11,
    0xD5, 0xA0, 0x50, 0x93, 0x06, 0xA0, 0x44, 0x14, 0x4E, 0xCC, 0xC1, 0x63, 0x00, 0x16, 0x06, 0xA0,
    0x47, 0x68, 0x04, 0x20, 0x42, 0x7E, 0x4E, 0xC8, 0x06, 0x05, 0x13, 0x03, 0x06, 0xA0, 0x47, 0x78,
    0x16, 0xF8, 0x04, 0xD3, 0x04, 0x60, 0x49, 0x9C, 0xC2, 0x8B, 0x07, 0x08, 0xC2, 0x43, 0x02, 0x29,
    0x00, 0x24, 0xC1, 0xA0, 0x50, 0x8E, 0x10, 0x06, 0xC2, 0x8B, 0x02, 0x26, 0x01, 0x00, 0x05, 0x81,
    0x82, 0x02, 0x16, 0x02, 0x06, 0xA0, 0x44, 0xDC, 0xC8, 0x06, 0x50, 0xB4, 0x05, 0x88, 0xC8, 0x01,
    0x50, 0x06, 0x04, 0x5A, 0x09, 0x85, 0x06, 0xA0, 0x47, 0x68, 0xC1, 0xE0, 0x50, 0x92, 0xC0, 0x17,
    0x13, 0x07, 0x88, 0xC0, 0x00, 0x16, 0x14, 0x43, 0x06, 0xA0, 0x47, 0x78, 0x06, 0x00, 0x16, 0xFC,
    0x06, 0x47, 0xC8, 0x17, 0x50, 0xB4, 0xC1, 0x97, 0x98, 0x20, 0x50, 0x8C, 0x40, 0x33, 0x13, 0xC9,
    0x0A, 0x85, 0x10, 0x17, 0xC0, 0xA3, 0x00, 0x14, 0x0A, 0x82, 0x18, 0x02, 0x04, 0x60, 0x4E, 0xE0,
    0xD1, 0x63, 0x00, 0x17, 0xD9, 0x23, 0x00, 0x18, 0x00, 0x0B, 0x13, 0x02, 0x02, 0x25, 0xFF, 0x00,
    0x88, 0x05, 0x50, 0x92, 0x12, 0x02, 0x04, 0x60, 0x4E, 0xE6, 0xC1, 0x45, 0x13, 0x21, 0x06, 0xA0,
    0x47, 0x68, 0xD1, 0x45, 0x13, 0x0C, 0xC0, 0x41, 0x13, 0x1B, 0x04, 0x20, 0x42, 0x76, 0x4E, 0xDA,
    0x05, 0x80, 0x02, 0x25, 0xFF, 0x00, 0x13, 0x14, 0x06, 0xA0, 0x47, 0x78, 0x10, 0xF2, 0xC8, 0x03,
    0x50, 0x02, 0x04, 0x20, 0x42, 0x7A, 0x4E, 0xDA, 0xC0, 0x46, 0x06, 0xA0, 0x44, 0x04, 0x40, 0x00,
    0xC1, 0x83, 0x02, 0x26, 0x00, 0x08, 0xDB, 0xF6, 0xFF, 0xFE, 0x06, 0x05, 0x16, 0xFC, 0x04, 0xC0,
    0x0A, 0x80, 0xD8, 0x00, 0x83, 0x4D, 0x04, 0x60, 0x4E, 0x62, 0x02, 0x82, 0x58, 0x00, 0x16, 0x02,
    0x04, 0x60, 0x45, 0x0A, 0xD0, 0x63, 0x00, 0x14, 0x20, 0x60, 0x4B, 0xC0, 0x16, 0x04, 0x02, 0x0A,
    0x20, 0x00, 0x04, 0x60, 0x4E, 0xD4, 0x06, 0xA0, 0x43, 0xB2, 0x4E, 0xDA, 0x02, 0x06, 0x00, 0x4C,
    0xC2, 0x43, 0x02, 0x29, 0x00, 0x24, 0x07, 0x05, 0x06, 0xA0, 0x44, 0xDC, 0xC1, 0xC1, 0x13, 0x09,
    0xC0, 0x47, 0x06, 0xA0, 0x48, 0xEC, 0x05, 0x87, 0x05, 0x85, 0x80, 0x85, 0x16, 0xF9, 0x06, 0x06,
    0x16, 0xF3, 0xC0, 0x23, 0x00, 0x02, 0x98, 0x20, 0x50, 0x8C, 0x40, 0x91, 0x13, 0x02, 0x04, 0x60,
    0x46, 0xF6, 0xC0, 0x40, 0x06, 0xA0, 0x48, 0xEC, 0xC8, 0x20, 0x4E, 0x80, 0x50, 0x06, 0x04, 0x20,
    0x42, 0x76, 0x4E, 0xDA, 0x04, 0xE0, 0x50, 0x92, 0x04, 0xE3, 0x01, 0x06, 0xC0, 0x60, 0x50, 0xB4,
    0x06, 0xA0, 0x44, 0x06, 0x02, 0x06, 0x00, 0x80, 0xC1, 0x43, 0x02, 0x25, 0x00, 0x08, 0x88, 0x01,
    0x50, 0x92, 0x16, 0x02, 0xCD, 0x63, 0x00, 0x02, 0xDD, 0x6F, 0xFB, 0xFE, 0x10, 0x00, 0xD5, 0x6F,
    0xFB, 0xFE, 0x06, 0x05, 0x88, 0xD5, 0x00, 0x02, 0x13, 0x01, 0x05, 0xC5, 0x05, 0xC1, 0x06, 0x06,
    0x16, 0xEE, 0xC8, 0xE0, 0x4E, 0x80, 0x00, 0x02, 0x04, 0x60, 0x4E, 0x5E, 0x88, 0x20, 0x43, 0x40,
    0x50, 0xDA, 0x14, 0x01, 0x09, 0x11, 0xC0, 0x01, 0x09, 0x31, 0x02, 0x21, 0x51, 0x08, 0x02, 0x0A,
    0x01, 0x00, 0xD8, 0x0A, 0x50, 0xB2, 0x02, 0x40, 0x00, 0x07, 0x13, 0x01, 0x0A, 0x0A, 0xD2, 0x11,
    0x42, 0x0A, 0xD4, 0x48, 0x04, 0x5B, 0x04, 0xC5, 0x20, 0xA0, 0x4B, 0xF8, 0x16, 0x04, 0x02, 0x25,
    0x80, 0x00, 0x05, 0x89, 0x06, 0x08, 0x20, 0xA0, 0x41, 0x0C, 0x16, 0x02, 0x02, 0x25, 0x02, 0x00,
    0x04, 0x5B, 0xD0, 0x82, 0x13, 0x0F, 0xC1, 0xC3, 0x02, 0x27, 0x00, 0x14, 0xC1, 0xA0, 0x50, 0x92,
    0xC1, 0x76, 0xCD, 0xF6, 0x05, 0xC7, 0xCD, 0xF6, 0xCD, 0xF6, 0x06, 0xA0, 0x44, 0x14, 0x4E, 0xCC,
    0x04, 0xD3, 0x10, 0x24, 0xD2, 0x60, 0x50, 0x90, 0x16, 0x04, 0xD8, 0x20, 0x40, 0x53, 0x50, 0x90,
    0x10, 0xE8, 0x09, 0x89, 0x04, 0xC7, 0x02, 0x08, 0x01, 0x00, 0x06, 0xA0, 0x49, 0x16, 0xDD, 0x85,
    0x3D, 0xC9, 0x0A, 0x87, 0xDD, 0x87, 0x02, 0x26, 0x00, 0x03, 0xDD, 0xA0, 0x50, 0x90, 0xD2, 0xA3,
    0x00, 0x15, 0x09, 0x8A, 0xC1, 0xA0, 0x50, 0x92, 0x04, 0xC5, 0x3D, 0x4A, 0xC1, 0x86, 0x13, 0x01,
    0x05, 0x85, 0x06, 0xA0, 0x44, 0x14, 0x4E, 0xCC, 0x04, 0xE0, 0x50, 0x92, 0xC8, 0x23, 0x00, 0x02,
    0x50, 0x06, 0xC8, 0x03, 0x50, 0x02, 0x04, 0x20, 0x42, 0x82, 0x4E, 0xDA, 0x10, 0x46, 0xC8, 0xE0,
    0x50, 0x06, 0x00, 0x02, 0xC0, 0xA0, 0x50, 0x8C, 0x20, 0xA0, 0x4B, 0xC0, 0x16, 0x45, 0x98, 0x02,
    0x40, 0x21, 0x16, 0x0E, 0xD1, 0x63, 0x00, 0x14, 0xD1, 0xA0, 0x83, 0x4D, 0x16, 0x03, 0x02, 0x45,
    0xF7, 0x00, 0x10, 0x02, 0x02, 0x65, 0x08, 0x00, 0xD8, 0xC5, 0x00, 0x14, 0x04, 0x60, 0x49, 0x9C,
    0x98, 0x02, 0x40, 0x27, 0x16, 0x16, 0xC1, 0x60, 0x50, 0x90, 0x16, 0x02, 0x04, 0x60, 0x4E, 0xE0,
    0xC0, 0x60, 0x83, 0x4E, 0x06, 0xA0, 0x44, 0x06, 0xC1, 0x43, 0x02, 0x25, 0x00, 0x08, 0x02, 0x01,
    0x00, 0x0A, 0xDD, 0x6F, 0xFB, 0xFE, 0x06, 0x01, 0x16, 0xFC, 0x06, 0xA0, 0x4E, 0xF2, 0x04, 0x60,
    0x48, 0xAC, 0x98, 0x02, 0x40, 0x2D, 0x16, 0x13, 0xD1, 0x60, 0x83, 0x4D, 0x16, 0x13, 0xC1, 0xE0,
    0x50, 0x92, 0xC1, 0x43, 0x02, 0x25, 0x00, 0x16, 0xCD, 0xF5, 0xCD, 0xE5, 0xFF, 0xFC, 0xCD, 0xF5,
    0xCD, 0xF5, 0xD8, 0x20, 0x40, 0x64, 0x83, 0x50, 0x04, 0xD3, 0x04, 0x60, 0x4E, 0x64, 0xD1, 0x60,
    0x83, 0x4D, 0x13, 0x02, 0x04, 0x60, 0x47, 0x94, 0x04, 0xC1, 0xD0, 0x63, 0x00, 0x14, 0x98, 0x02,
    0x40, 0x73, 0x16, 0x06, 0x0B, 0xD1, 0xB0, 0x64, 0x00, 0x03, 0xD8, 0x01, 0x50, 0x94, 0x10, 0xED,
    0xC1, 0x41, 0x02, 0x41, 0x08, 0x00, 0x13, 0x0F, 0x98, 0x02, 0x44, 0xA1, 0x13, 0x0C, 0xD0, 0x82,
    0x16, 0x06, 0x20, 0xA0, 0x41, 0x00, 0x16, 0x03, 0x24, 0xA0, 0x40, 0xFA, 0x13, 0x04, 0x02, 0x0A,
    0x20, 0x00, 0x04, 0x60, 0x4E, 0xD2, 0x98, 0x02, 0x40, 0x91, 0x16, 0x02, 0x04, 0x60, 0x48, 0x5C,
    0x98, 0x02, 0x41, 0x07, 0x13, 0xFB, 0x98, 0x02, 0x44, 0xA1, 0x16, 0x02, 0x04, 0x60, 0x47, 0xC4,
    0xD0, 0x82, 0x16, 0xF4, 0x20, 0xA0, 0x40, 0xFA, 0x16, 0x03, 0x24, 0xA0, 0x41, 0x00, 0x13, 0xEE,
    0x02, 0x0A, 0x40, 0x00, 0xC0, 0x45, 0x0A, 0x85, 0x18, 0xE4, 0x06, 0xA0, 0x49, 0x16, 0x02, 0x41,
    0x82, 0x00, 0x90, 0x45, 0x16, 0xDE, 0xD1, 0xA0, 0x50, 0x90, 0x16, 0x03, 0xD8, 0x23, 0x00, 0x19,
    0x50, 0x90, 0x98, 0xE0, 0x50, 0x90, 0x00, 0x19, 0x16, 0xD4, 0xC4, 0xE0, 0x50, 0xB0, 0x20, 0xA0,
    0x41, 0x06, 0x16, 0x0D, 0xC1, 0x63, 0x00, 0x1A, 0x06, 0xC5, 0xC8, 0xC5, 0x00, 0x06, 0x13, 0x07,
    0x06, 0xA0, 0x44, 0x14, 0x4E, 0xE0, 0x06, 0xA0, 0x4D, 0x92, 0xD4, 0xE3, 0x00, 0x18, 0x10, 0x9D,
    0x10, 0xC0, 0xC0, 0x20, 0x50, 0x8E, 0xA0, 0xA0, 0x50, 0xB4, 0xC2, 0x8B, 0xC1, 0x45, 0x16, 0x01,
    0x04, 0x5A, 0x02, 0x08, 0x50, 0x20, 0xC0, 0x42, 0x06, 0xA0, 0x44, 0x06, 0xDE, 0x2F, 0xFB, 0xFE,
    0x05, 0x82, 0x06, 0x05, 0x13, 0x03, 0x02, 0x88, 0x50, 0x8C, 0x16, 0xF8, 0xC0, 0x40, 0x06, 0xA0,
    0x44, 0x04, 0x40, 0x00, 0x02, 0x07, 0x50, 0x20, 0xDB, 0xF7, 0xFF, 0xFE, 0x05, 0x80, 0x81, 0xC8,
    0x16, 0xFB, 0x10, 0xE4, 0x07, 0x08, 0x10, 0x01, 0x04, 0xC8, 0xA0, 0xA0, 0x50, 0xB4, 0xC0, 0x02,
    0xC0, 0xA0, 0x50, 0x8E, 0xC2, 0x08, 0x13, 0xD9, 0xC2, 0x8B, 0x02, 0x08, 0x50, 0x21, 0x10, 0xE6,
    0x02, 0x0A, 0xE0, 0x00, 0x02, 0x82, 0x58, 0x00, 0x13, 0xCB, 0xC1, 0x63, 0x00, 0x1A, 0x06, 0xC5,
    0xC0, 0xA0, 0x50, 0x8C, 0x20, 0xA0, 0x4B, 0xF8, 0x16, 0x02, 0x04, 0x60, 0x4D, 0xA2, 0xD8, 0x20,
    0x50, 0x90, 0x50, 0x91, 0xC0, 0x63, 0x00, 0x02, 0x13, 0x02, 0x04, 0x60, 0x4D, 0x08, 0xC0, 0x60,
    0x50, 0x92, 0x13, 0x1C, 0x02, 0x81, 0x00, 0x7F, 0x12, 0x0B, 0x98, 0x20, 0x50, 0x8C, 0x40, 0xFB,
    0x13, 0x71, 0xA9, 0x20, 0x42, 0xC8, 0xFF, 0x4C, 0x59, 0x24, 0xFF, 0x62, 0xFF, 0x62, 0x10, 0x6E,
    0x06, 0x01, 0x0A, 0x11, 0xA0, 0x60, 0x50, 0xB4, 0x06, 0xA0, 0x44, 0x06, 0xD0, 0x6F, 0xFB, 0xFE,
    0x10, 0x00, 0xD9, 0x2F, 0xFB, 0xFE, 0x00, 0x03, 0xC0, 0x41, 0x13, 0x62, 0xC8, 0x01, 0x50, 0x06,
    0xC8, 0x03, 0x50, 0x02, 0x04, 0x20, 0x42, 0x7A, 0x4E, 0xDA, 0xC0, 0x60, 0x50, 0x92, 0x16, 0x20,
    0x04, 0xC0, 0xC2, 0xA3, 0x00, 0x12, 0x06, 0x4A, 0x04, 0xC2, 0x02, 0x08, 0x00, 0x64, 0xC1, 0x83,
    0x02, 0x26, 0x00, 0x40, 0xC1, 0x76, 0x02, 0x07, 0x00, 0x10, 0x09, 0x15, 0x18, 0x01, 0x05, 0x82,
    0x06, 0x07, 0x16, 0xFB, 0x06, 0x08, 0x16, 0xF6, 0x88, 0x20, 0x43, 0x40, 0x50, 0xDA, 0x14, 0x01,
    0x0A, 0x12, 0x98, 0x20, 0x50, 0x8C, 0x40, 0xFB, 0x13, 0x45, 0x02, 0x05, 0x00, 0x12, 0x10, 0x2C,
    0xD1, 0xA3, 0x00, 0x14, 0x02, 0x00, 0x00, 0x05, 0xC2, 0xA3, 0x00, 0x16, 0xC0, 0x8A, 0x05, 0x8A,
    0x88, 0x20, 0x43, 0x40, 0x50, 0xDA, 0x14, 0x03, 0x05, 0xCA, 0x02, 0x4A, 0xFF, 0xFE, 0x06, 0xC2,
    0xD9, 0x23, 0x00, 0x18, 0x00, 0x05, 0x13, 0x02, 0x02, 0x22, 0xFF, 0x00, 0x09, 0x96, 0x18, 0x0B,
    0xD0, 0xA3, 0x00, 0x19, 0x09, 0x82, 0x06, 0x00, 0x09, 0x16, 0x18, 0x01, 0x06, 0x40, 0x0A, 0xB6,
    0x18, 0x01, 0x06, 0x00, 0x09, 0xA6, 0x09, 0x36, 0x17, 0x01, 0x05, 0x00, 0x98, 0x20, 0x50, 0x8C,
    0x40, 0xFB, 0x13, 0x18, 0x02, 0x05, 0x00, 0x14, 0x06, 0xA0, 0x41, 0x36, 0x05, 0xA0, 0x50, 0x92,
    0x04, 0x60, 0x4B, 0x8E, 0x04, 0x60, 0x4F, 0x24, 0x05, 0xA0, 0x50, 0x92, 0x04, 0x60, 0x4E, 0x64,
    0x98, 0x20, 0x50, 0x8C, 0x40, 0xFB, 0x16, 0x85, 0xD8, 0xE0, 0x40, 0x87, 0x00, 0x08, 0x04, 0xC0,
    0x04, 0xCA, 0x04, 0xC2, 0x04, 0xC5, 0xC0, 0x43, 0x02, 0x21, 0x00, 0x08, 0xC1, 0xC1, 0x98, 0x31,
    0x40, 0x87, 0x13, 0x04, 0x05, 0x85, 0x02, 0x85, 0x00, 0x0A, 0x11, 0xF9, 0xC0, 0x60, 0x50, 0x8E,
    0x06, 0xA0, 0x44, 0x04, 0x40, 0x00, 0xC0, 0x4A, 0xC2, 0x04, 0x02, 0x06, 0x00, 0x04, 0xDB, 0xE4,
    0x00, 0x0B, 0xFF, 0xFE, 0x13, 0x07, 0xDB, 0xF7, 0xFF, 0xFE, 0x06, 0x05, 0x16, 0xFC, 0xD8, 0xE0,
    0x40, 0x87, 0x00, 0x08, 0x06, 0x06, 0x13, 0xD0, 0x02, 0x05, 0x00, 0x08, 0xC8, 0x38, 0x83, 0x4A,
    0x02, 0xE0, 0x50, 0x00, 0x02, 0x05, 0x00, 0x16, 0x06, 0xA0, 0x41, 0x36, 0x02, 0xE0, 0x83, 0xE0,
    0x02, 0x07, 0x83, 0x4A, 0x10, 0xE4, 0x10, 0xBE, 0xC1, 0xA0, 0x50, 0x92, 0x11, 0xBB, 0x98, 0x02,
    0x40, 0xFB, 0x16, 0x03, 0x81, 0x60, 0x50, 0x92, 0x14, 0xB5, 0xC1, 0xA0, 0x50, 0x92, 0x04, 0xC5,
    0xD2, 0x23, 0x00, 0x15, 0x09, 0x88, 0x3D, 0x48, 0x05, 0x85, 0xC8, 0x06, 0x50, 0x9A, 0x06, 0xA0,
    0x44, 0x14, 0x4F, 0x2E, 0xC2, 0x63, 0x00, 0x04, 0xC2, 0x09, 0x02, 0x49, 0x7F, 0xFF, 0x80, 0x49,
    0x13, 0x09, 0x0A, 0x18, 0x17, 0x05, 0xC8, 0x09, 0x50, 0x06, 0x04, 0x20, 0x42, 0x7E, 0x4E, 0xC8,
    0x06, 0xA0, 0x4D, 0x92, 0xC0, 0x60, 0x50, 0x9A, 0xD1, 0x63, 0x00, 0x19, 0x09, 0x85, 0x38, 0x45,
    0x05, 0xA0, 0x50, 0x92, 0x98, 0x20, 0x50, 0x8C, 0x40, 0xFB, 0x16, 0x03, 0x06, 0xA0, 0x4B, 0x02,
    0x10, 0x79, 0xE8, 0xE0, 0x44, 0xD6, 0x00, 0x04, 0x06, 0xA0, 0x4B, 0x48, 0xC1, 0xA3, 0x00, 0x1A,
    0x06, 0xC6, 0xC1, 0x60, 0x50, 0x92, 0x81, 0x85, 0x1A, 0xF3, 0x06, 0xC5, 0xC8, 0xC5, 0x00, 0x1A,
    0x10, 0xEF, 0xC8, 0x01, 0x50, 0x06, 0x04, 0x20, 0x42, 0x76, 0x4E, 0xC8, 0xC8, 0xC1, 0x00, 0x04,
    0x04, 0x5B, 0x98, 0x02, 0x40, 0xFB, 0x16, 0x2A, 0x81, 0x63, 0x00, 0x06, 0x16, 0x03, 0x98, 0xD3,
    0x00, 0x18, 0x13, 0xA9, 0xD0, 0x53, 0x13, 0x0C, 0x09, 0x81, 0xA0, 0x60, 0x50, 0xB4, 0x06, 0xA0,
    0x44, 0x06, 0xD1, 0x6F, 0xFB, 0xFE, 0x91, 0x60, 0x47, 0x39, 0x16, 0x0D, 0xD4, 0xE0, 0x40, 0x64,
    0x05, 0xA3, 0x00, 0x06, 0xC1, 0x63, 0x00, 0x06, 0x06, 0xA0, 0x44, 0x14, 0x4E, 0xE0, 0x06, 0xA0,
    0x4D, 0x92, 0x04, 0xC1, 0x10, 0xEA, 0xD8, 0x05, 0x50, 0x91, 0xB4, 0xE0, 0x43, 0x60, 0xD0, 0x93,
    0x09, 0x82, 0xB4, 0xC5, 0x09, 0x85, 0x06, 0xA0, 0x4B, 0x02, 0x10, 0x34, 0xD1, 0x53, 0x13, 0x0E,
    0xD1, 0xA0, 0x50, 0x91, 0x02, 0x26, 0x01, 0x00, 0xB1, 0x46, 0x17, 0x11, 0xC8, 0x23, 0x00, 0x04,
    0x50, 0x06, 0x04, 0x20, 0x42, 0x7E, 0x4E, 0xC8, 0xD4, 0xE0, 0x40, 0x64, 0x05, 0xA3, 0x00, 0x06,
    0xC1, 0x63, 0x00, 0x06, 0x06, 0xA0, 0x44, 0x14, 0x4F, 0x2E, 0xC8, 0xC1, 0x00, 0x04, 0xE8, 0xE0,
    0x44, 0xD6, 0x00, 0x04, 0xD1, 0x60, 0x50, 0x91, 0xD8, 0x05, 0x50, 0x20, 0x09, 0x85, 0xD0, 0x93,
    0x09, 0x82, 0x06, 0xA0, 0x4B, 0x44, 0xDB, 0xE0, 0x47, 0x39, 0xFF, 0xFE, 0xC1, 0x63, 0x00, 0x06,
    0xB4, 0xE0, 0x43, 0x60, 0xB4, 0xE0, 0x50, 0x91, 0xD8, 0xD3, 0x00, 0x18, 0x10, 0x96, 0x06, 0xA0,
    0x4E, 0xEC, 0x04, 0xD3, 0xD2, 0x20, 0x50, 0xCF, 0x09, 0x88, 0x02, 0x88, 0x00, 0x07, 0x11, 0x02,
    0x02, 0x08, 0x00, 0x06, 0x02, 0x07, 0x50, 0xC8, 0x02, 0x27, 0x01, 0x08, 0x99, 0xE0, 0x50, 0xB3,
    0x00, 0x01, 0x13, 0x17, 0x06, 0x08, 0x16, 0xF8, 0xD1, 0xE0, 0x50, 0xB2, 0x13, 0x10, 0x04, 0xE0,
    0x50, 0x06, 0x02, 0x07, 0x50, 0xC8, 0xC8, 0x07, 0x50, 0x02, 0xD1, 0xE0, 0x83, 0x50, 0x04, 0x20,
    0x42, 0x82, 0x4E, 0xA4, 0xD2, 0x20, 0x83, 0x50, 0x16, 0x02, 0xD8, 0x07, 0x83, 0x50, 0x04, 0xE0,
    0x50, 0xB2, 0x06, 0xA0, 0x4E, 0xFE, 0xC2, 0xE0, 0x83, 0x6C, 0x05, 0xCB, 0x04, 0x5B, 0x02, 0x0A,
    0x60, 0x00, 0xB8, 0x0A, 0x50, 0x8D, 0x10, 0xCE, 0xD2, 0xA0, 0x50, 0x12, 0x10, 0x43, 0x02, 0x0A,
    0x40, 0x00, 0x04, 0xD3, 0xD8, 0x0A, 0x83, 0x50, 0x10, 0xF4, 0xD2, 0xA0, 0x50, 0x12, 0x10, 0xF9,
    0x02, 0x0A, 0xE0, 0x00, 0x10, 0xF6, 0x02, 0x0A, 0x80, 0x00, 0x10, 0xF3, 0xC8, 0x23, 0x00, 0x02,
    0x50, 0x06, 0xC8, 0x03, 0x50, 0x02, 0x04, 0x20, 0x42, 0x82, 0x4E, 0xDA, 0x04, 0x5B, 0x02, 0x07,
    0x50, 0x8C, 0x98, 0x17, 0x4B, 0xC0, 0x14, 0xD7, 0xC0, 0x60, 0x83, 0x6A, 0x02, 0x02, 0x00, 0x0A,
    0xC2, 0x8B, 0x06, 0xA0, 0x44, 0x04, 0x40, 0x00, 0xC2, 0xCA, 0xDB, 0xF7, 0xFF, 0xFE, 0x06, 0x02,
    0x16, 0xFC, 0x04, 0x5B, 0x02, 0x0A, 0xA0, 0x00, 0x02, 0x82, 0x58, 0x00, 0x13, 0xD9, 0xC1, 0x63,
    0x00, 0x04, 0x09, 0x20, 0x18, 0x02, 0x09, 0x10, 0x18, 0x1B, 0x04, 0xE3, 0x00, 0x04, 0xC1, 0x85,
    0x0A, 0x16, 0x17, 0x08, 0x02, 0x45, 0x7F, 0xFF, 0xC8, 0x05, 0x50, 0x06, 0x13, 0x03, 0x04, 0x20,
    0x42, 0x7E, 0x4E, 0xC8, 0xC8, 0x23, 0x00, 0x02, 0x50, 0x06, 0xC8, 0x03, 0x50, 0x02, 0x04, 0x20,
    0x42, 0x82, 0x4F, 0x64, 0xD1, 0x60, 0x50, 0x12, 0x13, 0x03, 0x91, 0x60, 0x40, 0x87, 0x16, 0xB5,
    0xC0, 0xA0, 0x50, 0x8C, 0x90, 0xA0, 0x40, 0x82, 0x16, 0xAC, 0x0A, 0xC2, 0x17, 0x05, 0x04, 0xE3,
    0x00, 0x06, 0xD4, 0xE0, 0x40, 0x64, 0x10, 0x9F, 0x0A, 0x42, 0x18, 0xFD, 0x04, 0xE0, 0x50, 0x92,
    0x10, 0xFA, 0x02, 0x82, 0x58, 0x00, 0x16, 0x02, 0x04, 0x60, 0x45, 0x0A, 0x04, 0xC1, 0xD0, 0x63,
    0x00, 0x14, 0x0B, 0xD1, 0xB0, 0x64, 0x00, 0x03, 0xC0, 0x23, 0x00, 0x1A, 0x06, 0xC0, 0x20, 0x60,
    0x40, 0x9A, 0x16, 0x07, 0x80, 0x23, 0x00, 0x06, 0x16, 0x1F, 0x98, 0xD3, 0x00, 0x18, 0x16, 0x1C,
    0x10, 0x0B, 0xC2, 0x63, 0x00, 0x02, 0x16, 0x05, 0x88, 0x20, 0x50, 0x92, 0x43, 0x60, 0x1A, 0x14,
    0x10, 0x03, 0x80, 0x20, 0x50, 0x92, 0x1A, 0x10, 0x02, 0x21, 0x01, 0x00, 0x06, 0xA0, 0x43, 0xB2,
    0x4E, 0xDA, 0x02, 0x08, 0x00, 0xC8, 0x02, 0x06, 0x51, 0x08, 0x9D, 0xA0, 0x47, 0x39, 0x16, 0x04,
    0x06, 0x08, 0x16, 0xFB, 0x02, 0x21, 0x01, 0x00, 0xD8, 0x01, 0x50, 0x94, 0x10, 0xC4, 0xFF, 0xFF,
    0x42, 0x46, 0x42, 0x8C, 0x41, 0xCA, 0x41, 0xF6, 0x42, 0xC0, 0x46, 0x0C, 0x44, 0x9E, 0x42, 0x92,
    0x43, 0x3E, 0x40, 0x94, 0x40, 0x18, 0x41, 0xC4, 0x02, 0x05, 0x41, 0xA0, 0xC8, 0x00, 0x50, 0x20,
    0x10, 0x3C, 0x09, 0x87, 0xD2, 0x35, 0x02, 0x28, 0x60, 0x00, 0xD6, 0x48, 0x06, 0x07, 0x16, 0xFA,
    0x10, 0x34, 0xFF, 0x0B, 0x44, 0x49, 0x53, 0x4B, 0x4E, 0x41, 0x4D, 0x45, 0x20, 0x3D, 0x20, 0xFD,
    0xFF, 0x06, 0x55, 0x53, 0x45, 0x44, 0x20, 0x3D, 0xFE, 0x0C, 0x20, 0x41, 0x56, 0x41, 0x49, 0x4C,
    0x41, 0x42, 0x4C, 0x45, 0x20, 0x3D, 0xFE, 0xFF, 0x1C, 0x20, 0x46, 0x49, 0x4C, 0x45, 0x4E, 0x41,
    0x4D, 0x45, 0x20, 0x20, 0x53, 0x49, 0x5A, 0x45, 0x20, 0x20, 0x20, 0x20, 0x54, 0x59, 0x50, 0x45,
    0x20, 0x20, 0x20, 0x20, 0x50, 0xFF, 0x1C, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x20, 0x2D, 0x2D, 0x2D, 0x2D, 0x20, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D, 0x2D,
    0x2D, 0x20, 0x2D, 0xFC, 0x62, 0x82, 0x02, 0x05, 0x40, 0x32, 0x04, 0xC7, 0x02, 0x09, 0x8C, 0x00,
    0xD1, 0xF5, 0x98, 0x07, 0x41, 0xA5, 0x1A, 0xBD, 0x09, 0x77, 0xC1, 0xE7, 0x3E, 0xBC, 0x04, 0x57,
    0x41, 0x6C, 0x41, 0x56, 0x41, 0x7C, 0x41, 0x3E, 0x41, 0x06, 0x40, 0xBC, 0x02, 0x01, 0x00, 0x20,
    0x02, 0x06, 0x50, 0x24, 0x06, 0xA0, 0x43, 0x1E, 0xDD, 0xA0, 0x88, 0x00, 0x02, 0x86, 0x50, 0x44,
    0x16, 0xFB, 0x02, 0x21, 0x3F, 0xE0, 0x06, 0xA0, 0x43, 0x1E, 0x02, 0x06, 0x50, 0x24, 0xD6, 0x76,
    0x02, 0x86, 0x50, 0x44, 0x16, 0xFC, 0x02, 0x21, 0xC0, 0x40, 0x02, 0x81, 0x03, 0x00, 0x16, 0xE8,
    0x02, 0x07, 0x00, 0x20, 0xD6, 0x60, 0x41, 0x1E, 0x06, 0x07, 0x16, 0xFC, 0x02, 0x01, 0x42, 0xE2,
    0x06, 0xA0, 0x43, 0x1E, 0x10, 0xCA, 0xC1, 0xCA, 0x04, 0xCA, 0x02, 0x09, 0x27, 0x10, 0x04, 0xC8,
    0x04, 0xC6, 0x3D, 0x89, 0xC1, 0x86, 0x16, 0x07, 0xC2, 0x8A, 0x16, 0x05, 0x02, 0x06, 0x80, 0x00,
    0x02, 0x89, 0x00, 0x01, 0x16, 0x04, 0x02, 0x26, 0x00, 0x90, 0x05, 0x8A, 0x06, 0xC6, 0xD8, 0x06,
    0x8C, 0x00, 0x3E, 0x20, 0x41, 0x46, 0xC2, 0x48, 0x16, 0xEA, 0xC2, 0x82, 0x10, 0xAE, 0xC1, 0x83,
    0x02, 0x26, 0x00, 0x08, 0x02, 0x07, 0x00, 0x0A, 0xD2, 0x36, 0x02, 0x28, 0x60, 0x00, 0xD6, 0x48,
    0x06, 0x07, 0x16, 0xFA, 0x10, 0xA2, 0xC1, 0xE0, 0x50, 0x20, 0x07, 0x47, 0x39, 0xE0, 0x41, 0x68,
    0xC1, 0x88, 0x02, 0x26, 0x41, 0xA0, 0x02, 0x07, 0x00, 0x06, 0x10, 0xEE, 0xC1, 0xE0, 0x50, 0x20,
    0x15, 0x05, 0xD6, 0x60, 0x41, 0x1E, 0x10, 0x00, 0xD6, 0x60, 0x47, 0x80, 0xC8, 0x03, 0x50, 0x24,
    0x06, 0xA0, 0x00, 0x0E, 0xD0, 0x60, 0x83, 0x7C, 0x13, 0x05, 0x06, 0xA0, 0x00, 0x0E, 0xD0, 0x60,
    0x83, 0x7C, 0x13, 0xFB, 0x02, 0x0C, 0x11, 0x00, 0x02, 0xA4, 0xC0, 0xE0, 0x50, 0x24, 0x10, 0x24,
    0xFF, 0xFD, 0xFE, 0xFB, 0xFE, 0xFA, 0x20, 0x44, 0x2F, 0x46, 0x20, 0x20, 0x20, 0x44, 0x2F, 0x56,
    0x20, 0x20, 0x20, 0x49, 0x2F, 0x46, 0x20, 0x20, 0x20, 0x49, 0x2F, 0x56, 0x20, 0x20, 0x20, 0x50,
    0x47, 0x4D, 0x20, 0x20, 0x06, 0xA0, 0x4B, 0x10, 0x10, 0x0F, 0x02, 0x01, 0x00, 0x07, 0x06, 0xA0,
    0x42, 0x2A, 0x06, 0xA0, 0x41, 0xFE, 0xD0, 0x24, 0xFF, 0x70, 0x16, 0x06, 0xA9, 0x20, 0x44, 0x5C,
    0xFF, 0x4C, 0x59, 0x24, 0xFF, 0x62, 0xFF, 0x62, 0xC2, 0xE0, 0x50, 0xCA, 0x02, 0x07, 0x1E, 0x03,
    0x02, 0x08, 0x04, 0x5B, 0x04, 0x47, 0x02, 0x0B, 0x41, 0xE8, 0xD0, 0x24, 0xFF, 0x6C, 0x07, 0x01,
    0x02, 0x40, 0xFF, 0x00, 0x13, 0x0F, 0x02, 0x80, 0x09, 0x00, 0x15, 0x0C, 0xC2, 0x40, 0x72, 0x60,
    0x50, 0xCF, 0x08, 0x89, 0xD8, 0x00, 0x50, 0xCF, 0x02, 0x00, 0x02, 0x06, 0x38, 0x09, 0x69, 0x01,
    0xFF, 0x90, 0x04, 0xC1, 0xD9, 0x01, 0xFF, 0x70, 0x04, 0x5B, 0xC2, 0x4B, 0xA0, 0x64, 0xFF, 0x4C,
    0x06, 0xA0, 0x43, 0x04, 0x02, 0x80, 0xC8, 0x01, 0x16, 0xD7, 0x05, 0xC1, 0x06, 0xA0, 0x43, 0x04,
    0x02, 0x20, 0xCF, 0x4A, 0x04, 0x59, 0x02, 0x01, 0x00, 0x05, 0x06, 0xA0, 0x42, 0x2A, 0xC2, 0xCA,
    0x02, 0x80, 0x04, 0x00, 0x1B, 0xCB, 0x09, 0x80, 0x13, 0xC9, 0xC8, 0x00, 0x50, 0xB0, 0xC2, 0xC9,
    0x10, 0xC3, 0xC2, 0x4B, 0x88, 0x20, 0x20, 0x00, 0x49, 0x84, 0x13, 0x02, 0x06, 0xA0, 0x43, 0x2C,
    0xA0, 0x24, 0xFF, 0x4C, 0x02, 0x02, 0x00, 0x6C, 0x02, 0x01, 0x50, 0x20, 0x04, 0x20, 0x21, 0x14,
    0x98, 0x31, 0x43, 0x03, 0x16, 0xB1, 0xD0, 0xD1, 0x13, 0xAF, 0x04, 0x59, 0x06, 0xA0, 0x43, 0x2C,
    0x10, 0xA8, 0x02, 0x00, 0x00, 0x05, 0x06, 0xA0, 0x42, 0x62, 0x02, 0x02, 0x83, 0x4A, 0xC1, 0x42,
    0xDD, 0x60, 0x41, 0xA6, 0x02, 0x85, 0x83, 0x52, 0x16, 0xFB, 0x05, 0x81, 0x09, 0x83, 0x02, 0x83,
    0x00, 0x06, 0x1B, 0x9A, 0xDC, 0xB1, 0x06, 0x03, 0x16, 0xFD, 0xC2, 0x60, 0x20, 0x02, 0x10, 0x18,
    0x02, 0x00, 0x00, 0x04, 0x06, 0xA0, 0x42, 0x62, 0x02, 0x01, 0x42, 0xFA, 0x02, 0x00, 0x10, 0x00,
    0x02, 0x02, 0x00, 0x09, 0x04, 0x20, 0x21, 0x0C, 0xA0, 0x02, 0xC8, 0x00, 0x83, 0x56, 0x02, 0x01,
    0x50, 0x21, 0xD0, 0x91, 0x09, 0x82, 0x05, 0x82, 0x04, 0x20, 0x21, 0x0C, 0xC2, 0x60, 0x20, 0x04,
    0xC2, 0xE0, 0x50, 0xCA, 0x04, 0xC0, 0x06, 0x49, 0x04, 0x59, 0x00, 0x04, 0x11, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x60, 0xC7, 0x06, 0xC1, 0xD7, 0xC1, 0x06, 0xC1, 0xD7, 0xC1, 0x10, 0x00, 0xD0, 0x2F,
    0xFB, 0xFE, 0x06, 0xC0, 0xD0, 0x2F, 0xFB, 0xFE, 0x06, 0xC0, 0x04, 0x5B, 0xA0, 0x7B, 0x06, 0xC1,
    0xD8, 0x01, 0x8C, 0x02, 0x06, 0xC1, 0xD8, 0x01, 0x8C, 0x02, 0x04, 0x5B, 0x02, 0x01, 0x49, 0x80,
    0xC0, 0xB1, 0x13, 0xFB, 0xC1, 0xB1, 0xCD, 0xB1, 0x06, 0x42, 0x16, 0xFD, 0x10, 0xF9, 0xD2, 0x20,
    0x50, 0xCF, 0x09, 0x88, 0x02, 0x88, 0x00, 0x07, 0x11, 0x02, 0x02, 0x08, 0x00, 0x06, 0x0A, 0x18,
    0x04, 0xC3, 0x02, 0x02, 0x50, 0xC8, 0x02, 0x22, 0x01, 0x08, 0xD1, 0xE2, 0x00, 0x01, 0x16, 0x09,
    0xC0, 0xC2, 0xC8, 0x28, 0x44, 0x0A, 0x50, 0xB4, 0x06, 0x48, 0x16, 0xF5, 0x02, 0x02, 0x58, 0x00,
    0x10, 0x32, 0xD2, 0x60, 0x50, 0x95, 0x09, 0x89, 0x02, 0x29, 0xFF, 0xFC, 0x13, 0xF5, 0x02, 0x06,
    0x50, 0x99, 0xD1, 0x76, 0x98, 0x05, 0x47, 0x84, 0x13, 0x28, 0x02, 0x45, 0x0F, 0x00, 0x13, 0xEC,
    0x91, 0x62, 0x00, 0x01, 0x16, 0xE9, 0x06, 0x09, 0x16, 0x04, 0xC2, 0x62, 0x00, 0x02, 0x16, 0xE4,
    0x10, 0x11, 0x02, 0x07, 0x00, 0x0A, 0x05, 0x86, 0xC1, 0x42, 0x02, 0x25, 0x00, 0x08, 0x9D, 0xB5,
    0x16, 0xDB, 0x06, 0x09, 0x13, 0x02, 0x06, 0x07, 0x16, 0xFA, 0x06, 0x07, 0x13, 0x03, 0x98, 0x15,
    0x41, 0xA6, 0x16, 0xD2, 0xC0, 0xC2, 0xC1, 0x53, 0x02, 0x45, 0x00, 0x0F, 0xC8, 0x05, 0x50, 0xB0,
    0xC8, 0x28, 0x44, 0x0A, 0x50, 0xB4, 0x04, 0x60, 0x41, 0xE8, 0x02, 0x0B, 0x50, 0xD0, 0xD1, 0x60,
    0x50, 0xB3, 0xD1, 0xD6, 0x11, 0x11, 0x98, 0x07, 0x47, 0x84, 0x13, 0x07, 0x9E, 0xC7, 0x13, 0x01,
    0x04, 0xC5, 0x05, 0x86, 0x06, 0x09, 0x13, 0xB8, 0x10, 0xF4, 0x02, 0x8B, 0x50, 0xDA, 0x13, 0xC5,
    0x98, 0x1B, 0x41, 0xA6, 0x13, 0xC2, 0x10, 0xB0, 0xC1, 0x47, 0x10, 0xBF, 0x3C, 0xEF, 0x3A, 0xE9,
    0x38, 0xE3, 0x36, 0xDD, 0x34, 0xD7, 0x32, 0xD1, 0x02, 0x08, 0x00, 0x03, 0x07, 0x0A, 0x1F, 0x00,
    0x13, 0x3D, 0x06, 0x0A, 0x16, 0xFC, 0x06, 0x08, 0x16, 0xF9, 0x02, 0x0A, 0x06, 0x00, 0x1E, 0x01,
    0x06, 0xA0, 0x48, 0x3E, 0x04, 0xC9, 0xD8, 0x0A, 0x83, 0x50, 0x13, 0x07, 0x02, 0x09, 0xC0, 0x00,
    0x92, 0xA0, 0x47, 0x82, 0x16, 0x02, 0x02, 0x09, 0x20, 0x00, 0x98, 0x20, 0x50, 0x8C, 0x42, 0xFC,
    0x16, 0x02, 0x02, 0xE0, 0x83, 0xE0, 0x10, 0xBF, 0x00, 0x12, 0x4E, 0x20, 0x00, 0x0C, 0xF5, 0x03,
    0x01, 0x4E, 0x16, 0x00, 0x0C, 0xF5, 0x03, 0xFB, 0x01, 0xD7, 0x80, 0xD7, 0x80, 0xF7, 0x01, 0x4E,
    0x14, 0x02, 0x00, 0x0B, 0x4E, 0x4E, 0x44, 0x5C, 0x00, 0x09, 0xFF, 0x0C, 0x00, 0x06, 0x01, 0xFF,
    0x0B, 0x00, 0x06, 0xFB, 0x01, 0xE5, 0x80, 0xE5, 0x80, 0xF7, 0x01, 0xFF, 0x24, 0x02, 0x00, 0x07,
    0xFF, 0xFF, 0x44, 0x7C, 0xD8, 0x00, 0x8C, 0x00, 0x06, 0x07, 0x16, 0xFC, 0x04, 0x5B, 0x02, 0xE0,
    0x50, 0x00, 0x06, 0xA0, 0x48, 0xAA, 0x05, 0xA0, 0x83, 0xAA, 0x02, 0x0A, 0x07, 0x00, 0xC2, 0x42,
    0x0A, 0x29, 0x5A, 0x60, 0x41, 0x1E, 0x50, 0xB8, 0xD0, 0xE0, 0x83, 0x4D, 0x06, 0xA0, 0x49, 0x22,
    0x13, 0x08, 0x98, 0x03, 0x46, 0x41, 0x13, 0x02, 0x09, 0x13, 0x10, 0x03, 0xFA, 0x60, 0x41, 0x1E,
    0x50, 0xB8, 0x98, 0x03, 0x46, 0x41, 0x1B, 0xAC, 0x06, 0xA0, 0x48, 0xDA, 0x04, 0xC3, 0x06, 0xA0,
    0x44, 0x18, 0x04, 0xC5, 0x04, 0xC8, 0xC0, 0x60, 0x83, 0x4E, 0x06, 0xA0, 0x43, 0x1C, 0x40, 0x00,
    0x02, 0x01, 0x44, 0x58, 0x98, 0x20, 0x83, 0x50, 0x44, 0x71, 0x13, 0x02, 0x02, 0x01, 0x44, 0x78,
    0xC1, 0x31, 0xD0, 0x31, 0x98, 0x00, 0x45, 0xE2, 0x13, 0x08, 0x98, 0x00, 0x44, 0x71, 0x13, 0x16,
    0xD1, 0xF1, 0x09, 0x87, 0x06, 0xA0, 0x44, 0x94, 0x10, 0xF4, 0xD8, 0x20, 0x40, 0x48, 0x8C, 0x00,
    0xD8, 0x06, 0x8C, 0x00, 0xD8, 0x05, 0x8C, 0x00, 0xD8, 0x20, 0x50, 0x11, 0x8C, 0x00, 0xD8, 0x20,
    0x45, 0xE2, 0x8C, 0x00, 0xD8, 0x20, 0x47, 0x81, 0x8C, 0x00, 0x10, 0xE3, 0xA2, 0x31, 0x04, 0xC7,
    0x3D, 0xC4, 0xC0, 0x31, 0xC0, 0x51, 0xC2, 0x08, 0x16, 0xDC, 0x02, 0x07, 0x02, 0xBC, 0x06, 0xA0,
    0x44, 0x94, 0x02, 0x08, 0x00, 0x06, 0x06, 0xA0, 0x48, 0x00, 0xC8, 0x20, 0x41, 0x76, 0x83, 0xE2,
    0xC0, 0x60, 0x83, 0x4E, 0x06, 0xA0, 0x43, 0x1E, 0x02, 0x0A, 0x0B, 0x7C, 0x98, 0x20, 0x44, 0x71,
    0x83, 0x50, 0x16, 0x02, 0x02, 0x0A, 0x17, 0xE4, 0xC8, 0x0A, 0x83, 0xF4, 0x04, 0x20, 0x47, 0x7A,
    0xC2, 0xA0, 0x83, 0xF2, 0x16, 0x02, 0x04, 0x60, 0x44, 0x2A, 0xD2, 0xA0, 0x5F, 0x01, 0x02, 0x4A,
    0x40, 0x00, 0x13, 0x03, 0x09, 0x4A, 0x04, 0x60, 0x44, 0x30, 0x98, 0x20, 0x83, 0x51, 0x44, 0x71,
    0x16, 0x1E, 0xC1, 0x45, 0x16, 0x05, 0x02, 0x05, 0x01, 0x01, 0xA0, 0xC4, 0x04, 0x60, 0x44, 0xE4,
    0xC0, 0x06, 0x16, 0x15, 0xD8, 0x00, 0x5F, 0x05, 0xC8, 0x20, 0x45, 0xE2, 0x83, 0xF4, 0x02, 0x08,
    0x00, 0x04, 0x06, 0xA0, 0x48, 0x00, 0x04, 0x20, 0x47, 0x7A, 0xC2, 0xA0, 0x83, 0xF2, 0x13, 0xDB,
    0xD1, 0xE0, 0x5F, 0x01, 0x0A, 0x47, 0x17, 0x03, 0xD8, 0x05, 0x83, 0x51, 0x10, 0x01, 0xA0, 0xC4,
    0x02, 0x26, 0x01, 0x00, 0x98, 0x06, 0x83, 0x4D, 0x13, 0x04, 0x06, 0xA0, 0x48, 0xF4, 0x04, 0x60,
    0x44, 0xDE, 0xC8, 0x03, 0x83, 0x4A, 0xD8, 0x20, 0x50, 0x09, 0x83, 0x4D, 0xCA, 0x43, 0x50, 0xB6,
    0xDA, 0x60, 0x50, 0x09, 0x50, 0xB9, 0x04, 0xCA, 0x04, 0x60, 0x47, 0x74, 0x06, 0xA0, 0x48, 0xAA,
    0xC2, 0x42, 0x0A, 0x29, 0xC1, 0x29, 0x50, 0xB8, 0xC0, 0xC3, 0x16, 0x02, 0xC0, 0x00, 0x16, 0x28,
    0x51, 0x04, 0xC2, 0x29, 0x50, 0xB6, 0x13, 0x22, 0x02, 0x0A, 0x07, 0x00, 0x06, 0xA0, 0x48, 0x2A,
    0x04, 0xC6, 0xC1, 0xC3, 0x3D, 0x84, 0xD8, 0x22, 0x50, 0xC6, 0x5F, 0x03, 0x04, 0xC5, 0x02, 0x08,
    0x00, 0x28, 0x06, 0xA0, 0x49, 0x22, 0x13, 0x04, 0xD2, 0xA9, 0x50, 0xB8, 0x11, 0x01, 0x0A, 0x18,
    0x82, 0x06, 0x1A, 0x04, 0x61, 0x88, 0x61, 0x88, 0x05, 0x46, 0x07, 0x05, 0x82, 0x06, 0x1A, 0x02,
    0x04, 0x60, 0x44, 0x30, 0x06, 0xC6, 0x06, 0xA0, 0x48, 0xF4, 0x10, 0x05, 0xD8, 0x0C, 0x50, 0xCC,
    0x06, 0xA0, 0x48, 0xDA, 0xD1, 0x0C, 0x04, 0xC8, 0xD2, 0xA0, 0x50, 0xCC, 0x16, 0x07, 0xD2, 0xA0,
    0x50, 0xCE, 0x16, 0x01, 0x8E, 0x38, 0xC0, 0x00, 0x16, 0x01, 0x05, 0xC8, 0x06, 0xA0, 0x48, 0x00,
    0x06, 0xA0, 0x44, 0x18, 0xC8, 0x20, 0x45, 0xE2, 0x83, 0xF4, 0xD2, 0x20, 0x50, 0xCC, 0x13, 0x04,
    0xC8, 0x20, 0x46, 0xBA, 0x83, 0xF6, 0x10, 0x0E, 0xD2, 0x20, 0x50, 0xCE, 0x13, 0x03, 0xC8, 0x01,
    0x83, 0xF6, 0x10, 0x08, 0xC0, 0x00, 0x13, 0x02, 0x02, 0x61, 0x40, 0x00, 0x06, 0xA0, 0x43, 0x1E,
    0x02, 0x41, 0x3F, 0xFF, 0xD8, 0x20, 0x50, 0x0F, 0x5F, 0x05, 0xD8, 0x06, 0x5F, 0x03, 0xD8, 0x08,
    0x5F, 0x07, 0x04, 0x20, 0x47, 0x7A, 0xC2, 0xA0, 0x83, 0xF2, 0x16, 0x02, 0x04, 0x60, 0x44, 0x2A,
    0xD2, 0xA0, 0x5F, 0x01, 0x22, 0xA0, 0x47, 0x88, 0x13, 0xD5, 0x02, 0x4A, 0x18, 0x00, 0x13, 0x32,
    0xB8, 0x20, 0x40, 0x75, 0x50, 0xAF, 0x13, 0x25, 0xD2, 0x20, 0x50, 0xCC, 0x16, 0x04, 0xC0, 0x00,
    0x13, 0xB5, 0xC0, 0xC3, 0x16, 0xB3, 0x02, 0x08, 0x00, 0x09, 0x98, 0x20, 0x50, 0x09, 0x47, 0x09,
    0x1B, 0x02, 0x02, 0x08, 0x00, 0x12, 0xC1, 0x08, 0x10, 0xA9, 0xC0, 0x00, 0x16, 0x24, 0xD2, 0xA0,
    0x5F, 0x01, 0x0A, 0x2A, 0x18, 0x0B, 0x1F, 0x02, 0x16, 0x25, 0x07, 0x00, 0xD8, 0x0C, 0x50, 0xCE,
    0x02, 0x01, 0x40, 0x00, 0xD8, 0x0C, 0x50, 0xCD, 0x04, 0x60, 0x46, 0x30, 0x02, 0x0A, 0x34, 0x00,
    0x10, 0x07, 0x09, 0x4A, 0xD2, 0x8A, 0x16, 0x02, 0x02, 0x2A, 0x02, 0x00, 0x02, 0x2A, 0x20, 0x00,
    0x04, 0x60, 0x44, 0x30, 0xD2, 0x20, 0x50, 0xCC, 0x13, 0xE0, 0x06, 0xA0, 0x48, 0x7C, 0x58, 0x0C,
    0x50, 0xCC, 0x04, 0x60, 0x46, 0x20, 0xD2, 0x20, 0x50, 0xCD, 0x16, 0x04, 0xC0, 0xC3, 0x16, 0x02,
    0x06, 0xA0, 0x48, 0x50, 0x04, 0xCA, 0x04, 0x60, 0x44, 0x30, 0x83, 0xE0, 0x83, 0x94, 0x45, 0xBC,
    0xB0, 0xF7, 0x34, 0x12, 0x2E, 0x50, 0x04, 0xF0, 0x04, 0x00, 0xD2, 0x49, 0x16, 0x04, 0xD2, 0x60,
    0x50, 0x0A, 0x13, 0x01, 0x1D, 0x02, 0x0A, 0xC9, 0x17, 0x01, 0x1E, 0x03, 0x07, 0x09, 0xD8, 0x20,
    0x83, 0xD0, 0x5F, 0x01, 0x1F, 0x01, 0x13, 0x14, 0x06, 0x09, 0x13, 0x0A, 0x1F, 0x01, 0x13, 0x10,
    0x1F, 0x00, 0x16, 0xF8, 0x10, 0x05, 0x07, 0x09, 0x1F, 0x00, 0x13, 0x02, 0x06, 0x09, 0x16, 0xFC,
    0x1D, 0x03, 0x1E, 0x02, 0x03, 0x80, 0x00, 0x00, 0x1F, 0x00, 0x13, 0xFA, 0x1F, 0x01, 0x16, 0xFF,
    0xCE, 0xE0, 0x5F, 0x07, 0x06, 0x0A, 0x16, 0xFA, 0x10, 0xEE, 0xD2, 0xA0, 0x88, 0x00, 0xD8, 0x0A,
    0x5F, 0x07, 0x1F, 0x00, 0x16, 0xFC, 0x10, 0xEC, 0xDE, 0xE0, 0xD8, 0x3B, 0xD6, 0xE0, 0xD8, 0x1B,
    0x80, 0x80, 0x16, 0xFC, 0x10, 0xFB, 0x8C, 0x00, 0xA0, 0xF8, 0x16, 0xFE, 0x06, 0x0A, 0x88, 0x00,
    0xC8, 0x04, 0x83, 0xF2, 0xC8, 0x28, 0x47, 0xE8, 0x83, 0xDA, 0x0A, 0xE8, 0x09, 0xC8, 0x02, 0x28,
    0x47, 0xF0, 0x58, 0x20, 0x47, 0x87, 0x83, 0xD0, 0xE8, 0x38, 0x83, 0xD0, 0xC8, 0x38, 0x83, 0xD8,
    0xC8, 0x38, 0x83, 0xDE, 0xC8, 0x38, 0x83, 0xF6, 0x04, 0x5B, 0x1E, 0x04, 0x1E, 0x05, 0x1E, 0x06,
    0x1E, 0x07, 0x1D, 0x01, 0x02, 0x08, 0x1D, 0x04, 0xA2, 0x02, 0x04, 0x88, 0x04, 0x5B, 0x02, 0x09,
    0x50, 0x20, 0x02, 0x06, 0x83, 0x94, 0xCD, 0xB9, 0x02, 0x86, 0x84, 0x00, 0x16, 0xFC, 0x04, 0x5B,
    0xD2, 0xA0, 0x50, 0xCE, 0x13, 0x13, 0xD8, 0x21, 0x00, 0x0C, 0x50, 0x09, 0x11, 0xF8, 0x5A, 0x60,
    0x41, 0x1E, 0x50, 0xB8, 0x02, 0x08, 0x1F, 0x07, 0x62, 0x02, 0x04, 0x88, 0x13, 0x07, 0x98, 0x60,
    0x47, 0x85, 0x00, 0x11, 0x13, 0x04, 0xFA, 0x60, 0x41, 0x1E, 0x50, 0xB8, 0x04, 0xCA, 0x02, 0x08,
    0x05, 0xA0, 0x98, 0x20, 0x50, 0x09, 0x49, 0x20, 0x16, 0x02, 0x02, 0x08, 0x05, 0x00, 0x98, 0x20,
    0x50, 0x09, 0x47, 0x09, 0x16, 0x01, 0x09, 0x18, 0xC2, 0x8A, 0x13, 0x01, 0x0A, 0x18, 0xCA, 0x48,
    0x50, 0xB6, 0xDA, 0x60, 0x50, 0x09, 0x50, 0xB9, 0x04, 0x5B, 0xC0, 0xA0, 0x50, 0xB0, 0x06, 0x02,
    0x02, 0x08, 0x50, 0x20, 0x02, 0x06, 0x83, 0x94, 0xC2, 0x86, 0xCE, 0x36, 0x02, 0x86, 0x84, 0x00,
    0x16, 0xFC, 0x04, 0xE0, 0x50, 0xCC, 0xD8, 0x20, 0x42, 0x49, 0x50, 0xAF, 0x02, 0x08, 0x47, 0x8A,
    0xCE, 0xB8, 0x02, 0x88, 0x47, 0xE8, 0x16, 0xFC, 0x04, 0x5B, 0x04, 0xC6, 0x04, 0xC7, 0x04, 0xC5,
    0xC2, 0x8B, 0x06, 0xA0, 0x48, 0x2A, 0x04, 0xC8, 0xD8, 0x20, 0x42, 0x48, 0x5F, 0x01, 0xD8, 0x88,
    0x50, 0xC6, 0x04, 0x5A, 0x02, 0x0A, 0x00, 0xC8, 0x06, 0x0A, 0x16, 0xFE, 0xC2, 0x06, 0x0A, 0x18,
    0xD2, 0xA9, 0x50, 0xB8, 0x11, 0x01, 0xC2, 0x06, 0xD8, 0x08, 0x5F, 0x07, 0xC2, 0x8B, 0x98, 0x08,
    0x5F, 0x03, 0x13, 0x03, 0xD8, 0x20, 0x47, 0x86, 0x83, 0xD0, 0xD8, 0x20, 0x49, 0x20, 0x5F, 0x01,
    0x10, 0xE6, 0x02, 0x0A, 0x1F, 0x07, 0x62, 0x82, 0x04, 0x8A, 0x04, 0x5B, 0x20, 0x20, 0x20, 0x20,
    0x31, 0x39, 0x38, 0x36, 0x2C, 0x20, 0x50, 0x61, 0x75, 0x6C, 0x20, 0x43, 0x68, 0x61, 0x72, 0x6C,
    0x74, 0x6F, 0x6E, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x08, 0x20, 0x00, 0xA5, 0x5A, 0x21, 0x26, 0x23, 0xB0, 0x22, 0x6E, 0x00, 0x08, 0x20, 0x24,
    0xA0, 0x00, 0xFF, 0xD7, 0x26, 0x90, 0x3F, 0x38, 0x05, 0x96, 0x20, 0xFA, 0x0F, 0xF0, 0x20, 0x94,
    0x21, 0x9E, 0x20, 0x94, 0x21, 0x70, 0x20, 0x94, 0x21, 0xF2, 0x20, 0x94, 0x22, 0x08, 0x20, 0x94,
    0x22, 0x14, 0x20, 0x94, 0x22, 0x22, 0x20, 0x94, 0x22, 0x2E, 0x20, 0x94, 0x22, 0x3C, 0x20, 0x9A,
    0x22, 0xC8, 0x20, 0xDA, 0x23, 0xCA, 0x31, 0x00, 0xC8, 0x0B, 0x20, 0x30, 0x06, 0xA0, 0x26, 0x60,
    0x10, 0x18, 0x02, 0x81, 0x3F, 0x38, 0x13, 0x15, 0xC0, 0x01, 0x02, 0x02, 0x83, 0x4A, 0x8C, 0xB0,
    0x16, 0x15, 0x02, 0x82, 0x83, 0x50, 0x16, 0xFB, 0xC8, 0x10, 0x20, 0x22, 0x02, 0xE0, 0x20, 0xBA,
    0xC0, 0x20, 0x20, 0x22, 0x13, 0x06, 0x06, 0x90, 0x02, 0xE0, 0x83, 0xE0, 0x58, 0x20, 0x83, 0x42,
    0x83, 0x42, 0x02, 0x0C, 0x11, 0x00, 0xC2, 0xE0, 0x20, 0x30, 0x04, 0x5B, 0x02, 0x21, 0x00, 0x08,
    0x10, 0xE0, 0xC8, 0x3E, 0x83, 0xE2, 0x02, 0xE0, 0x83, 0xE0, 0xC8, 0x0B, 0x20, 0xAA, 0xC0, 0x81,
    0x02, 0x81, 0x80, 0x00, 0x1B, 0x07, 0x09, 0xC1, 0x0A, 0x11, 0x0A, 0x42, 0x09, 0xB2, 0xA0, 0xA1,
    0x0C, 0xFA, 0xC0, 0x92, 0x06, 0x92, 0x02, 0xE0, 0x20, 0x94, 0xC8, 0x0B, 0x83, 0xF6, 0x03, 0x80,
    0x02, 0x01, 0x03, 0x00, 0x02, 0x02, 0x9C, 0x02, 0xD4, 0x81, 0x06, 0xC1, 0xD4, 0x81, 0x06, 0xC1,
    0x98, 0x20, 0x98, 0x00, 0x20, 0xFA, 0x16, 0x05, 0x98, 0x20, 0x98, 0x00, 0x20, 0xFB, 0x13, 0x03,
    0x05, 0x81, 0x05, 0x81, 0x10, 0xF5, 0x02, 0x03, 0x83, 0x00, 0x02, 0x04, 0x83, 0x73, 0x05, 0xD4,
    0xD1, 0x54, 0x09, 0x85, 0xA1, 0x43, 0xDD, 0x41, 0x06, 0xC1, 0xD5, 0x41, 0x02, 0x06, 0x21, 0xEC,
    0xC4, 0xC6, 0xD4, 0xBE, 0xD4, 0xBE, 0x02, 0xE0, 0x83, 0xE0, 0x04, 0x60, 0x00, 0x6A, 0x02, 0xE0,
    0x20, 0x94, 0x03, 0x80, 0x02, 0xE0, 0x83, 0xE0, 0xC8, 0x0B, 0x20, 0xAA, 0x06, 0xA0, 0x00, 0x0E,
    0x02, 0xE0, 0x20, 0x94, 0xC8, 0x0B, 0x83, 0xF6, 0x03, 0x80, 0x06, 0xA0, 0x22, 0x4E, 0xD8, 0x2D,
    0x00, 0x02, 0x8C, 0x00, 0x03, 0x80, 0x06, 0xA0, 0x22, 0x4E, 0xD8, 0x31, 0x8C, 0x00, 0x06, 0x02,
    0x16, 0xFC, 0x03, 0x80, 0x06, 0xA0, 0x22, 0x54, 0xDB, 0x60, 0x88, 0x00, 0x00, 0x02, 0x03, 0x80,
    0x06, 0xA0, 0x22, 0x54, 0xDC, 0x60, 0x88, 0x00, 0x06, 0x02, 0x16, 0xFC, 0x03, 0x80, 0xC0, 0x5D,
    0xD8, 0x2D, 0x00, 0x01, 0x8C, 0x02, 0x02, 0x61, 0x80, 0x00, 0xD8, 0x01, 0x8C, 0x02, 0x03, 0x80,
    0x02, 0x01, 0x40, 0x00, 0x10, 0x01, 0x04, 0xC1, 0xC0, 0x9D, 0xD8, 0x20, 0x20, 0x99, 0x8C, 0x02,
    0xE0, 0x81, 0xD8, 0x02, 0x8C, 0x02, 0xC0, 0x6D, 0x00, 0x02, 0xC0, 0xAD, 0x00, 0x04, 0x04, 0x5B,
    0x02, 0x04, 0x83, 0x4A, 0x02, 0xA7, 0x02, 0x08, 0x00, 0x64, 0xC0, 0x14, 0xC1, 0x84, 0x04, 0xF6,
    0x04, 0xF6, 0xC1, 0x40, 0x13, 0x21, 0x07, 0x40, 0x02, 0x03, 0x00, 0x40, 0x04, 0xF6, 0x04, 0xD6,
    0x02, 0x80, 0x00, 0x64, 0x1A, 0x11, 0x02, 0x80, 0x27, 0x10, 0x1A, 0x07, 0x05, 0x83, 0xC0, 0x40,
    0x04, 0xC0, 0x3C, 0x08, 0xD9, 0x27, 0x00, 0x03, 0x00, 0x03, 0x05, 0x83, 0xC0, 0x40, 0x04, 0xC0,
    0x3C, 0x08, 0xD9, 0x27, 0x00, 0x03, 0x00, 0x02, 0xD9, 0x27, 0x00, 0x01, 0x00, 0x01, 0xD5, 0x27,
    0x00, 0x07, 0x05, 0x45, 0x11, 0x01, 0x05, 0x14, 0x04, 0x5B, 0xC1, 0x7E, 0x53, 0xE0, 0x23, 0x36,
    0xC0, 0x20, 0x83, 0x56, 0xC2, 0x40, 0x02, 0x29, 0xFF, 0xF8, 0x04, 0x20, 0x21, 0x10, 0xD0, 0xC1,
    0x09, 0x83, 0x07, 0x04, 0x02, 0x02, 0x20, 0x8C, 0x05, 0x80, 0x05, 0x84, 0x80, 0xC4, 0x13, 0x06,
    0x04, 0x20, 0x21, 0x10, 0xDC, 0x81, 0x98, 0x01, 0x23, 0xEF, 0x16, 0xF6, 0xC1, 0x04, 0x13, 0x52,
    0x02, 0x84, 0x00, 0x07, 0x15, 0x4F, 0x04, 0xE0, 0x83, 0xD0, 0xC8, 0x04, 0x83, 0x54, 0xC8, 0x04,
    0x20, 0x36, 0x05, 0x84, 0xA8, 0x04, 0x83, 0x56, 0xC8, 0x20, 0x83, 0x56, 0x20, 0x38, 0x02, 0xE0,
    0x83, 0xE0, 0x04, 0xC1, 0x02, 0x0C, 0x0F, 0x00, 0xC3, 0x0C, 0x13, 0x01, 0x1E, 0x00, 0x02, 0x2C,
    0x01, 0x00, 0x04, 0xE0, 0x83, 0xD0, 0x02, 0x8C, 0x20, 0x00, 0x13, 0x32, 0xC8, 0x0C, 0x83, 0xD0,
    0x1D, 0x00, 0x02, 0x02, 0x40, 0x00, 0x98, 0x12, 0x21, 0x7B, 0x16, 0xEE, 0xA0, 0xA0, 0x20, 0xA4,
    0x10, 0x03, 0xC0, 0xA0, 0x83, 0xD2, 0x1D, 0x00, 0xC0, 0x92, 0x13, 0xE6, 0xC8, 0x02, 0x83, 0xD2,
    0x05, 0xC2, 0xC2, 0x72, 0xD1, 0x60, 0x83, 0x55, 0x13, 0x09, 0x9C, 0x85, 0x16, 0xF2, 0x09, 0x85,
    0x02, 0x06, 0x20, 0x8C, 0x9C, 0xB6, 0x16, 0xED, 0x06, 0x05, 0x16, 0xFC, 0x05, 0x81, 0xC8, 0x01,
    0x20, 0x3A, 0xC8, 0x09, 0x20, 0x34, 0xC8, 0x0C, 0x20, 0x32, 0x06, 0x99, 0x10, 0xE2, 0x1E, 0x00,
    0x02, 0xE0, 0x20, 0x9A, 0xC0, 0x09, 0x04, 0x20, 0x21, 0x10, 0x09, 0xD1, 0x16, 0x04, 0x03, 0x80,
    0x02, 0xE0, 0x20, 0x9A, 0x04, 0xC1, 0x06, 0xC1, 0xD7, 0x41, 0xF3, 0xE0, 0x23, 0x36, 0x03, 0x80,
    0x31, 0x00, 0xC8, 0x0B, 0x20, 0x30, 0x02, 0xE0, 0x20, 0xBA, 0x04, 0x20, 0x21, 0x20, 0x02, 0xE0,
    0x83, 0xE0, 0x13, 0x02, 0x04, 0x60, 0x21, 0x5A, 0x04, 0x60, 0x21, 0x60, 0x04, 0xE0, 0x20, 0x22,
    0x53, 0xE0, 0x23, 0x36, 0xC0, 0x20, 0x83, 0x56, 0x04, 0x20, 0x21, 0x1C, 0x00, 0x08, 0x13, 0x38,
    0x02, 0x20, 0xFF, 0xF7, 0x02, 0x01, 0x02, 0x00, 0x04, 0x20, 0x21, 0x08, 0x05, 0x80, 0xC8, 0x00,
    0x20, 0x2E, 0xC1, 0xE0, 0x20, 0x24, 0xC1, 0x47, 0x04, 0xCC, 0x06, 0xA0, 0x25, 0xFA, 0x02, 0x83,
    0x00, 0x01, 0x16, 0x2A, 0x05, 0x8C, 0x04, 0xC3, 0x10, 0x29, 0x02, 0x83, 0x00, 0x46, 0x16, 0x24,
    0x04, 0xC2, 0x06, 0xA0, 0x26, 0x48, 0x02, 0x83, 0x00, 0x3A, 0x16, 0xF7, 0x06, 0xA0, 0x24, 0x34,
    0xC0, 0x20, 0x20, 0x22, 0x13, 0x07, 0x06, 0xA0, 0x26, 0x60, 0x10, 0x12, 0xCB, 0x4E, 0x00, 0x16,
    0xC3, 0xA0, 0x20, 0x22, 0x03, 0x80, 0xC2, 0x8B, 0xC0, 0x20, 0x20, 0x2E, 0x06, 0x00, 0x02, 0x01,
    0x01, 0x00, 0x04, 0x20, 0x21, 0x08, 0x06, 0xA0, 0x25, 0xFA, 0x04, 0x5A, 0x06, 0xA0, 0x24, 0x34,
    0xD7, 0x40, 0xF3, 0xE0, 0x23, 0x36, 0x03, 0x80, 0x06, 0xA0, 0x25, 0xDE, 0x04, 0xC4, 0xD1, 0x23,
    0x26, 0x7C, 0x09, 0x74, 0xC8, 0x08, 0x20, 0x2C, 0x06, 0xA0, 0x25, 0xB0, 0x04, 0x64, 0x24, 0x08,
    0x05, 0x80, 0x02, 0x40, 0xFF, 0xFE, 0xC1, 0x20, 0x20, 0x24, 0xA1, 0x00, 0x18, 0x08, 0x88, 0x04,
    0x20, 0x26, 0x1B, 0x05, 0xC1, 0x60, 0x20, 0x24, 0xC8, 0x04, 0x20, 0x24, 0x10, 0x0A, 0xC1, 0x20,
    0x20, 0x28, 0xA1, 0x00, 0x88, 0x04, 0x20, 0x2A, 0x14, 0x0C, 0xC1, 0x60, 0x20, 0x28, 0xC8, 0x04,
    0x20, 0x28, 0xC1, 0xC5, 0x02, 0x09, 0x00, 0x08, 0x06, 0xA0, 0x26, 0x48, 0x06, 0x09, 0x16, 0xFC,
    0x10, 0xB0, 0x02, 0x00, 0x08, 0x00, 0x10, 0xCA, 0xA0, 0x05, 0xC8, 0x00, 0x20, 0x22, 0x10, 0xA9,
    0xA8, 0x00, 0x20, 0x2C, 0x13, 0xA6, 0x02, 0x00, 0x0B, 0x00, 0x10, 0xF5, 0xA0, 0x05, 0xC1, 0xC0,
    0x10, 0xA0, 0xA0, 0x05, 0xDD, 0xC0, 0xDD, 0xE0, 0x20, 0xDB, 0x10, 0x9B, 0xA0, 0x05, 0x06, 0xA0,
    0x25, 0x82, 0xC0, 0x00, 0x13, 0x16, 0x02, 0x26, 0xFF, 0xF8, 0x81, 0x06, 0x1B, 0x02, 0x05, 0x14,
    0x10, 0x90, 0x85, 0x94, 0x16, 0xF8, 0x89, 0xA4, 0x00, 0x02, 0x00, 0x02, 0x16, 0xF4, 0x89, 0xA4,
    0x00, 0x04, 0x00, 0x04, 0x16, 0xF0, 0xC0, 0xE6, 0x00, 0x06, 0xC2, 0x50, 0xC4, 0x03, 0xC0, 0x09,
    0x16, 0xFC, 0x02, 0x24, 0x00, 0x08, 0xC8, 0x04, 0x20, 0x2A, 0x10, 0xEA, 0xA0, 0x05, 0x06, 0xA0,
    0x25, 0x82, 0x02, 0x26, 0xFF, 0xF8, 0x81, 0x06, 0x13, 0xE3, 0xC2, 0x96, 0x15, 0x01, 0x05, 0x0A,
    0x82, 0x94, 0x16, 0xF7, 0x89, 0xA4, 0x00, 0x02, 0x00, 0x02, 0x16, 0xF3, 0x89, 0xA4, 0x00, 0x04,
    0x00, 0x04, 0x16, 0xEF, 0xC2, 0x96, 0x15, 0x16, 0xC0, 0xE6, 0x00, 0x06, 0xC2, 0x53, 0xC4, 0xC0,
    0xC0, 0xC9, 0x16, 0xFC, 0xC2, 0x46, 0x62, 0x44, 0xC2, 0x86, 0x02, 0x2A, 0x00, 0x08, 0xC0, 0xC6,
    0x06, 0x43, 0x06, 0x4A, 0xC6, 0x93, 0x06, 0x49, 0x16, 0xFB, 0x02, 0x24, 0x00, 0x08, 0xC8, 0x04,
    0x20, 0x2A, 0x10, 0xD9, 0xCB, 0x44, 0x00, 0x02, 0x02, 0x00, 0x0C, 0x00, 0x04, 0x60, 0x24, 0xC8,
    0x04, 0x60, 0x24, 0xB0, 0xC2, 0x8B, 0x02, 0x09, 0x00, 0x06, 0xC1, 0xA0, 0x20, 0x2A, 0x02, 0x26,
    0xFF, 0xF8, 0xC1, 0x06, 0x88, 0x06, 0x20, 0x28, 0x1A, 0xF3, 0xC8, 0x06, 0x20, 0x2A, 0x06, 0xA0,
    0x26, 0x48, 0xDD, 0xA0, 0x20, 0xE1, 0x06, 0x09, 0x16, 0xFA, 0xC5, 0x80, 0x02, 0x06, 0x40, 0x00,
    0x04, 0x5A, 0xC2, 0x8B, 0x04, 0xC0, 0xC3, 0x0C, 0x13, 0x08, 0x06, 0xA0, 0x26, 0x48, 0xD0, 0x20,
    0x20, 0xE1, 0x06, 0xA0, 0x26, 0x48, 0xA0, 0x03, 0x04, 0x5A, 0x02, 0x09, 0x00, 0x04, 0x06, 0xA0,
    0x26, 0x48, 0x06, 0xA0, 0x25, 0xDE, 0x0A, 0x40, 0xA0, 0x03, 0x06, 0x09, 0x16, 0xF8, 0x04, 0x5A,
    0x02, 0x23, 0xFF, 0xD0, 0x02, 0x83, 0x00, 0x0A, 0x1A, 0x05, 0x02, 0x23, 0xFF, 0xF9, 0x02, 0x83,
    0x00, 0x19, 0x1B, 0x01, 0x04, 0x5B, 0x02, 0x00, 0x0A, 0x00, 0x10, 0xC0, 0x02, 0xE0, 0x83, 0xE0,
    0x02, 0x00, 0x20, 0x32, 0xC3, 0x30, 0xC2, 0x70, 0xC8, 0x30, 0x83, 0x54, 0xC8, 0x30, 0x83, 0x56,
    0xC0, 0x50, 0x1D, 0x00, 0x98, 0x20, 0x40, 0x00, 0x21, 0x7B, 0x16, 0x1D, 0x06, 0x99, 0x10, 0x1B,
    0x1E, 0x00, 0x02, 0xE0, 0x20, 0xDA, 0xC0, 0x20, 0x20, 0x2E, 0x02, 0x01, 0x20, 0xDB, 0x02, 0x02,
    0x00, 0x04, 0x04, 0x20, 0x21, 0x14, 0x70, 0x00, 0x09, 0x50, 0x16, 0x10, 0x09, 0x82, 0xC0, 0x01,
    0x02, 0x01, 0x20, 0x3C, 0x04, 0x20, 0x21, 0x14, 0x04, 0xC8, 0x06, 0x02, 0x11, 0xD7, 0xD0, 0xF1,
    0x09, 0x83, 0xA2, 0x03, 0x04, 0x5B, 0x02, 0xE0, 0x20, 0xDA, 0x04, 0xC0, 0x06, 0xC0, 0x04, 0x60,
    0x24, 0x4E, 0x02, 0x01, 0x3F, 0x40, 0x02, 0x21, 0xFF, 0xF8, 0xC0, 0x11, 0x11, 0x05, 0x80, 0x60,
    0x20, 0x2A, 0x16, 0xF9, 0x05, 0xCB, 0x04, 0x5B, 0x02, 0x00, 0x0D, 0x00, 0x04, 0x5B, 0x33, 0x58,
    0x57, 0x69, 0x6A, 0x89, 0x8A, 0x5B, 0x04, 0x62, 0x61, 0x65, 0x64, 0xF6, 0xF6, 0x03, 0xF6, 0xF6,
    0x4D, 0x00, 0x00, 0xC8, 0x3F, 0x38, 0x55, 0x54, 0x4C, 0x54, 0x41, 0x42, 0x20, 0x22, 0x50, 0x41,
    0x44, 0x20, 0x20, 0x20, 0x83, 0x00, 0x47, 0x50, 0x4C, 0x57, 0x53, 0x20, 0x83, 0xE0, 0x53, 0x4F,
    0x55, 0x4E, 0x44, 0x20, 0x84, 0x00, 0x56, 0x44, 0x50, 0x52, 0x44, 0x20, 0x88, 0x00, 0x56, 0x44,
    0x50, 0x53, 0x54, 0x41, 0x88, 0x02, 0x56, 0x44, 0x50, 0x57, 0x44, 0x20, 0x8C, 0x00, 0x56, 0x44,
    0x50, 0x57, 0x41, 0x20, 0x8C, 0x02, 0x53, 0x50, 0x43, 0x48, 0x52, 0x44, 0x90, 0x00, 0x53, 0x50,
    0x43, 0x48, 0x57, 0x54, 0x94, 0x00, 0x47, 0x52, 0x4D, 0x52, 0x44, 0x20, 0x98, 0x00, 0x47, 0x52,
    0x4D, 0x52, 0x41, 0x20, 0x98, 0x02, 0x47, 0x52, 0x4D, 0x57, 0x44, 0x20, 0x9C, 0x00, 0x47, 0x52,
    0x4D, 0x57, 0x41, 0x20, 0x9C, 0x02, 0x53, 0x43, 0x41, 0x4E, 0x20, 0x20, 0x00, 0x0E, 0x58, 0x4D,
    0x4C, 0x4C, 0x4E, 0x4B, 0x21, 0x00, 0x4B, 0x53, 0x43, 0x41, 0x4E, 0x20, 0x21, 0x04, 0x56, 0x53,
    0x42, 0x57, 0x20, 0x20, 0x21, 0x08, 0x56, 0x4D, 0x42, 0x57, 0x20, 0x20, 0x21, 0x0C, 0x56, 0x53,
    0x42, 0x52, 0x20, 0x20, 0x21, 0x10, 0x56, 0x4D, 0x42, 0x52, 0x20, 0x20, 0x21, 0x14, 0x56, 0x57,
    0x54, 0x52, 0x20, 0x20, 0x21, 0x18, 0x44, 0x53, 0x52, 0x4C, 0x4E, 0x4B, 0x21, 0x1C, 0x4C, 0x4F,
    0x41, 0x44, 0x45, 0x52, 0x21, 0x20, 0x47, 0x50, 0x4C, 0x4C, 0x4E, 0x4B, 0x20, 0xFC, 0x00, 0x00
];
